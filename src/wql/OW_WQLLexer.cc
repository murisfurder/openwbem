#line 2 "OW_WQLLexer.cc"

#line 4 "OW_WQLLexer.cc"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5
#define YY_FLEX_SUBMINOR_VERSION 31
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L
#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;
#endif /* ! C99 */

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! FLEXINT_H */

#ifdef __cplusplus

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

#if __STDC__

#define YY_USE_CONST

#endif	/* __STDC__ */
#endif	/* ! __cplusplus */

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE owwqlrestart(owwqlin  )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#define YY_BUF_SIZE 16384
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

extern int owwqlleng;

extern FILE *owwqlin, *owwqlout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

    #define YY_LESS_LINENO(n)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up owwqltext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up owwqltext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, (yytext_ptr)  )

/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 */

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef unsigned int yy_size_t;
#endif

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via owwqlrestart()), so that the user can continue scanning by
	 * just pointing owwqlin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* Stack of input buffers. */
static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

/* yy_hold_char holds the character lost when owwqltext is formed. */
static char yy_hold_char;
static int yy_n_chars;		/* number of characters read into yy_ch_buf */
int owwqlleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = (char *) 0;
static int yy_init = 1;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow owwqlwrap()'s to do buffer switches
 * instead of setting up a fresh owwqlin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void owwqlrestart (FILE *input_file  );
void owwql_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
YY_BUFFER_STATE owwql_create_buffer (FILE *file,int size  );
void owwql_delete_buffer (YY_BUFFER_STATE b  );
void owwql_flush_buffer (YY_BUFFER_STATE b  );
void owwqlpush_buffer_state (YY_BUFFER_STATE new_buffer  );
void owwqlpop_buffer_state (void );

static void owwqlensure_buffer_stack (void );
static void owwql_load_buffer_state (void );
static void owwql_init_buffer (YY_BUFFER_STATE b,FILE *file  );

#define YY_FLUSH_BUFFER owwql_flush_buffer(YY_CURRENT_BUFFER )

YY_BUFFER_STATE owwql_scan_buffer (char *base,yy_size_t size  );
YY_BUFFER_STATE owwql_scan_string (yyconst char *yy_str  );
YY_BUFFER_STATE owwql_scan_bytes (yyconst char *bytes,int len  );

void *owwqlalloc (yy_size_t  );
void *owwqlrealloc (void *,yy_size_t  );
void owwqlfree (void *  );

#define yy_new_buffer owwql_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        owwqlensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            owwql_create_buffer(owwqlin,YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        owwqlensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            owwql_create_buffer(owwqlin,YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */

#define owwqlwrap(n) 1
#define YY_SKIP_YYWRAP

typedef unsigned char YY_CHAR;

FILE *owwqlin = (FILE *) 0, *owwqlout = (FILE *) 0;

typedef int yy_state_type;

extern int owwqllineno;
extern char *owwqltext;
#define yytext_ptr owwqltext
static yyconst flex_int16_t yy_nxt[][67] =
    {
    {
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0
    },

    {
       13,   14,   15,   16,   15,   17,   18,   19,   20,   21,
       22,   23,   24,   25,   26,   27,   28,   29,   30,   31,
       32,   33,   34,   35,   36,   14,   37,   38,   39,   40,

       41,   42,   43,   44,   45,   46,   47,   48,   38,   49,
       50,   51,   52,   53,   38,   54,   55,   56,   57,   58,
       59,   60,   61,   62,   63,   64,   14,   14,   14,   65,
       66,   67,   68,   69,   70,   71,   72
    },

    {
       13,   14,   15,   16,   15,   17,   18,   19,   20,   21,
       22,   23,   24,   25,   26,   27,   28,   29,   30,   31,
       32,   33,   34,   35,   36,   14,   37,   38,   39,   40,
       41,   42,   43,   44,   45,   46,   47,   48,   38,   49,
       50,   51,   52,   53,   38,   54,   55,   56,   57,   58,
       59,   60,   61,   62,   63,   64,   14,   14,   14,   65,

       66,   67,   68,   69,   70,   71,   72
    },

    {
       13,   73,   73,   73,   73,   73,   73,   73,   73,   74,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73
    },

    {
       13,   73,   73,   73,   73,   73,   73,   73,   73,   74,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,

       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73
    },

    {
       13,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   76,   75,   75,   75,   75,   77,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,

       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75
    },

    {
       13,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   76,   75,   75,   75,   75,   77,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75
    },

    {
       13,   78,   78,   78,   78,   78,   79,   78,   78,   78,

       78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
       78,   78,   78,   78,   78,   80,   78,   78,   78,   78,
       78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
       78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
       78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
       78,   78,   78,   78,   78,   78,   78
    },

    {
       13,   78,   78,   78,   78,   78,   79,   78,   78,   78,
       78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
       78,   78,   78,   78,   78,   80,   78,   78,   78,   78,
       78,   78,   78,   78,   78,   78,   78,   78,   78,   78,

       78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
       78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
       78,   78,   78,   78,   78,   78,   78
    },

    {
       13,   81,   81,   81,   81,   81,   81,   81,   81,   82,
       81,   81,   81,   81,   81,   81,   81,   81,   81,   81,
       81,   81,   81,   81,   81,   81,   81,   81,   81,   81,
       81,   81,   81,   81,   81,   81,   81,   81,   81,   81,
       81,   81,   81,   81,   81,   81,   81,   81,   81,   81,
       81,   81,   81,   81,   81,   81,   81,   81,   81,   81,
       81,   81,   81,   81,   81,   81,   81

    },

    {
       13,   81,   81,   81,   81,   81,   81,   81,   81,   82,
       81,   81,   81,   81,   81,   81,   81,   81,   81,   81,
       81,   81,   81,   81,   81,   81,   81,   81,   81,   81,
       81,   81,   81,   81,   81,   81,   81,   81,   81,   81,
       81,   81,   81,   81,   81,   81,   81,   81,   81,   81,
       81,   81,   81,   81,   81,   81,   81,   81,   81,   81,
       81,   81,   81,   81,   81,   81,   81
    },

    {
       13,   83,   83,   83,   83,   83,   83,   83,   83,   84,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   85,   83,   83,   83,   83,

       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83
    },

    {
       13,   83,   83,   83,   83,   83,   83,   83,   83,   84,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   85,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,

       83,   83,   83,   83,   83,   83,   83
    },

    {
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13
    },

    {
       13,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,

      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14
    },

    {
       13,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,

      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15
    },

    {
       13,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16
    },

    {
       13,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,

      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17
    },

    {
       13,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,

      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18
    },

    {
       13,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19

    },

    {
       13,  -20,  -20,  -20,  -20,  -20,  -20,  -20,   86,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20
    },

    {
       13,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,

      -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,  -21,  -21
    },

    {
       13,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
      -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
      -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
      -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
      -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
      -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,

      -22,  -22,  -22,  -22,  -22,  -22,  -22
    },

    {
       13,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23
    },

    {
       13,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,

      -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24
    },

    {
       13,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,

      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25
    },

    {
       13,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26
    },

    {
       13,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,

      -27,  -27,  -27,  -27,  -27,   87,  -27,  -27,  -27,  -27,
      -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,
      -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,
      -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,
      -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,
      -27,  -27,  -27,  -27,  -27,  -27,  -27
    },

    {
       13,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,
      -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,   88,  -28,
      -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,
      -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,

      -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,
      -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,
      -28,  -28,  -28,  -28,  -28,  -28,  -28
    },

    {
       13,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
      -29,  -29,   89,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
      -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
      -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
      -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
      -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
      -29,  -29,  -29,  -29,  -29,  -29,  -29

    },

    {
       13,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  -30,  -30,  -30,   90,  -30,   91,  -30,
      -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,   92,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  -30,  -30,  -30,  -30
    },

    {
       13,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,
      -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,
      -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,

      -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,
      -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,
      -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,
      -31,  -31,  -31,  -31,  -31,  -31,  -31
    },

    {
       13,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,
      -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,
      -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,
      -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,
      -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,
      -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,

      -32,  -32,  -32,  -32,  -32,  -32,  -32
    },

    {
       13,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,
      -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,
      -33,   93,   94,   95,  -33,  -33,  -33,  -33,  -33,  -33,
      -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,
      -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,
      -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,
      -33,  -33,  -33,  -33,  -33,  -33,  -33
    },

    {
       13,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
      -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,

      -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
      -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
      -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
      -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
      -34,  -34,  -34,  -34,  -34,  -34,  -34
    },

    {
       13,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
      -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
      -35,  -35,   96,   97,  -35,  -35,  -35,  -35,  -35,  -35,
      -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
      -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,

      -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
      -35,  -35,  -35,  -35,  -35,  -35,  -35
    },

    {
       13,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  -36,  -36,  -36,  -36,  -36
    },

    {
       13,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,

      -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,
      -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,
      -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,
      -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,
      -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,
      -37,  -37,  -37,  -37,  -37,  -37,  -37
    },

    {
       13,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,
      -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,   98,  -38,
      -38,  -38,  -38,  -38,  -38,  -38,  -38,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,  -38,  -38,  -38,  -38,  -38,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,
      -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,   98,  -39,
      -39,  -39,  -39,  -39,  -39,  -39,  -39,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  107,
       98,  108,   98,   98,   98,   98,  109,  110,   98,   98,
       98,   98,   98,   98,  -39,  -39,  -39,  -39,  -39,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  111,
      -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,   98,  -40,
      -40,  -40,  -40,  -40,  -40,  -40,  -40,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  112,   98,  -40,  -40,  -40,  -40,  -40,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,
      -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,   98,  -41,
      -41,  -41,  -41,  -41,  -41,  -41,  -41,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  113,   98,   98,  114,   98,
       98,   98,   98,   98,  -41,  -41,  -41,  -41,  -41,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,
      -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,   98,  -42,
      -42,  -42,  -42,  -42,  -42,  -42,  -42,   98,  115,   98,
       98,   98,  116,   98,   98,   98,  117,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,  -42,  -42,  -42,  -42,  -42,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,
      -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,   98,  -43,
      -43,  -43,  -43,  -43,  -43,  -43,  -43,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  118,   98,   98,   98,
       98,  119,   98,   98,  -43,  -43,  -43,  -43,  -43,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
      -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,   98,  -44,

      -44,  -44,  -44,  -44,  -44,  -44,  -44,   98,  120,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  121,   98,   98,  122,   98,   98,  123,   98,
       98,   98,   98,   98,  -44,  -44,  -44,  -44,  -44,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,
      -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,   98,  -45,
      -45,  -45,  -45,  -45,  -45,  -45,  -45,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  124,   98,   98,   98,   98,

       98,   98,   98,   98,  -45,  -45,  -45,  -45,  -45,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,
      -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,   98,  -46,
      -46,  -46,  -46,  -46,  -46,  -46,  -46,   98,  125,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  126,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,  -46,  -46,  -46,  -46,  -46,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,

      -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,   98,  -47,
      -47,  -47,  -47,  -47,  -47,  -47,  -47,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  127,   98,   98,   98,   98,  128,   98,   98,   98,
       98,   98,   98,   98,  -47,  -47,  -47,  -47,  -47,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
      -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,   98,  -48,
      -48,  -48,  -48,  -48,  -48,  -48,  -48,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,  129,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,  -48,  -48,  -48,  -48,  -48,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,
      -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,   98,  -49,
      -49,  -49,  -49,  -49,  -49,  -49,  -49,   98,   98,   98,
       98,   98,  130,   98,   98,   98,  131,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,  -49,  -49,  -49,  -49,  -49,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
      -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,   98,  -50,
      -50,  -50,  -50,  -50,  -50,  -50,  -50,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  132,   98,   98,   98,
       98,   98,  133,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,  -50,  -50,  -50,  -50,  -50,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,
      -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,   98,  -51,
      -51,  -51,  -51,  -51,  -51,  -51,  -51,   98,  134,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  135,   98,   98,   98,   98,   98,  136,   98,
       98,   98,   98,   98,  -51,  -51,  -51,  -51,  -51,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,   98,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  137,   98,   98,   98,  138,   98,   98,  139,   98,
       98,   98,   98,   98,  -52,  -52,  -52,  -52,  -52,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
      -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,   98,  -53,
      -53,  -53,  -53,  -53,  -53,  -53,  -53,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  140,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,  -53,  -53,  -53,  -53,  -53,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,   98,  -54,

      -54,  -54,  -54,  -54,  -54,  -54,  -54,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  141,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,  -54,  -54,  -54,  -54,  -54,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,   98,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,   98,   98,   98,
       98,   98,  142,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,  143,   98,

       98,   98,   98,   98,  -55,  -55,  -55,  -55,  -55,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,
      -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,   98,  -56,
      -56,  -56,  -56,  -56,  -56,  -56,  -56,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  144,   98,   98,   98,
       98,   98,   98,   98,   98,  145,   98,   98,   98,   98,
       98,   98,   98,   98,  -56,  -56,  -56,  -56,  -56,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,

      -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,   98,  -57,
      -57,  -57,  -57,  -57,  -57,  -57,  -57,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  146,   98,  147,   98,   98,  148,   98,   98,   98,
       98,   98,   98,   98,  -57,  -57,  -57,  -57,  -57,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
      -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,   98,  -58,
      -58,  -58,  -58,  -58,  -58,  -58,  -58,   98,  149,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,  -58,  -58,  -58,  -58,  -58,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,
      -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,   98,  -59,
      -59,  -59,  -59,  -59,  -59,  -59,  -59,   98,   98,   98,
       98,   98,   98,   98,   98,  150,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,  -59,  -59,  -59,  -59,  -59,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  151,
      -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,   98,  -60,
      -60,  -60,  -60,  -60,  -60,  -60,  -60,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,  -60,  -60,  -60,  -60,  -60,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,
      -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,   98,  -61,
      -61,  -61,  -61,  -61,  -61,  -61,  -61,   98,   98,   98,

       98,   98,  152,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,  -61,  -61,  -61,  -61,  -61,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,
      -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,   98,  -62,
      -62,  -62,  -62,  -62,  -62,  -62,  -62,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  153,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,  -62,  -62,  -62,  -62,  -62,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,  154,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,  -63,  -63,  -63
    },

    {
       13,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,
      -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,

      -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,
      -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,
      -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,
      -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,
      -64,  -64,  -64,  -64,  -64,  -64,  -64
    },

    {
       13,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,
      -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,
      -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,
      -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,
      -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,

      -65,  -65,  -65,  -65,  -65,  -65,  155,  155,  155,  -65,
      -65,  -65,  -65,  -65,  -65,  -65,  -65
    },

    {
       13,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  156,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66
    },

    {
       13,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,

      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  157,  157,  157,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67
    },

    {
       13,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,

      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  158,  158,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68
    },

    {
       13,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  159,  159,  159,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69

    },

    {
       13,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,
      -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,
      -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,
      -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,
      -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,
      -70,  -70,  -70,  -70,  -70,  -70,  -70,  160,  160,  -70,
      -70,  -70,  -70,  -70,  -70,  -70,  -70
    },

    {
       13,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,

      -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,  -71,  -71,  -71,  161,  161,  161,  -71,
      -71,  -71,  -71,  -71,  -71,  -71,  -71
    },

    {
       13,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,
      -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,
      -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,
      -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,
      -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,
      -72,  -72,  -72,  -72,  -72,  -72,  162,  -72,  -72,  -72,

      -72,  -72,  -72,  -72,  -72,  -72,  -72
    },

    {
       13,  163,  163,  163,  163,  163,  163,  163,  163,  -73,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163,  163,  163,  163,  163
    },

    {
       13,  -74,  164,  165,  165,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,  166,  -74,  -74,  -74,  -74,

      -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,  -74,  -74
    },

    {
       13,  167,  167,  167,  167,  167,  167,  167,  167,  167,
      167,  167,  -75,  167,  167,  167,  167,  -75,  167,  167,
      167,  167,  167,  167,  167,  167,  167,  167,  167,  167,
      167,  167,  167,  167,  167,  167,  167,  167,  167,  167,
      167,  167,  167,  167,  167,  167,  167,  167,  167,  167,

      167,  167,  167,  167,  167,  167,  167,  167,  167,  167,
      167,  167,  167,  167,  167,  167,  167
    },

    {
       13,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,
      -76,  -76,  168,  -76,  -76,  -76,  -76,  169,  -76,  -76,
      -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,
      -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,
      -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,
      -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,
      -76,  -76,  -76,  -76,  -76,  -76,  -76
    },

    {
       13,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,

      -77,  -77,  170,  -77,  -77,  -77,  -77,  -77,  -77,  -77,
      -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,
      -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,
      -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,
      -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,
      -77,  -77,  -77,  -77,  -77,  -77,  -77
    },

    {
       13,  171,  171,  171,  171,  171,  -78,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  172,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,

      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171
    },

    {
       13,  -79,  -79,  -79,  -79,  -79,  173,  -79,  -79,  -79,
      -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,
      -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,
      -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,
      -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,
      -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,
      -79,  -79,  -79,  -79,  -79,  -79,  -79

    },

    {
       13,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  172,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171
    },

    {
       13,  174,  174,  174,  174,  174,  174,  174,  174,  -81,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,

      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174
    },

    {
       13,  -82,  175,  176,  176,  -82,  -82,  -82,  -82,  -82,
      -82,  -82,  -82,  -82,  -82,  177,  -82,  -82,  -82,  -82,
      -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,
      -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,
      -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,
      -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,

      -82,  -82,  -82,  -82,  -82,  -82,  -82
    },

    {
       13,  178,  178,  178,  178,  178,  178,  178,  178,  -83,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  -83,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178
    },

    {
       13,  -84,  179,  180,  180,  -84,  -84,  -84,  -84,  181,
      -84,  -84,  -84,  -84,  -84,  182,  -84,  -84,  -84,  -84,

      -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,
      -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,
      -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,
      -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,
      -84,  -84,  -84,  -84,  -84,  -84,  -84
    },

    {
       13,  183,  183,  183,  183,  183,  183,  183,  183,  183,
      183,  183,  183,  183,  183,  183,  183,  183,  183,  183,
      183,  183,  183,  183,  183,  183,  183,  183,  183,  183,
      183,  183,  183,  183,  183,  183,  183,  183,  183,  183,
      183,  183,  183,  183,  183,  183,  183,  183,  183,  183,

      183,  183,  183,  183,  183,  183,  183,  183,  183,  183,
      183,  183,  183,  183,  183,  183,  183
    },

    {
       13,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,
      -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,
      -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,
      -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,
      -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,
      -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,
      -86,  -86,  -86,  -86,  -86,  -86,  -86
    },

    {
       13,  184,  184,  -87,  -87,  184,  184,  184,  184,  184,

      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184
    },

    {
       13,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,
      -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,   88,  -88,
      -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,
      -88,  -88,   92,  -88,  -88,  -88,  -88,  -88,  -88,  -88,

      -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,
      -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,
      -88,  -88,  -88,  -88,  -88,  -88,  -88
    },

    {
       13,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,
      -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,
      -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,
      -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,
      -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,
      -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,
      -89,  -89,  -89,  -89,  -89,  -89,  -89

    },

    {
       13,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,
      -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  185,  -90,
      -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,
      -90,  -90,   92,  -90,  -90,  -90,  -90,  -90,  -90,  -90,
      -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,
      -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,
      -90,  -90,  -90,  -90,  -90,  -90,  -90
    },

    {
       13,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,
      -91,  -91,  -91,  -91,  -91,  -91,   90,  -91,   91,  -91,
      -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,

      -91,  -91,   92,  -91,  -91,  -91,  -91,  -91,  -91,  -91,
      -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,
      -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,
      -91,  -91,  -91,  -91,  -91,  -91,  -91
    },

    {
       13,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,
      -92,  -92,  -92,  186,  -92,  186,  -92,  -92,  187,  -92,
      -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,
      -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,
      -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,
      -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,

      -92,  -92,  -92,  -92,  -92,  -92,  -92
    },

    {
       13,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,
      -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,
      -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,
      -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,
      -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,
      -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,
      -93,  -93,  -93,  -93,  -93,  -93,  -93
    },

    {
       13,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,
      -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,

      -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,
      -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,
      -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,
      -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,
      -94,  -94,  -94,  -94,  -94,  -94,  -94
    },

    {
       13,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,
      -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,
      -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,
      -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,
      -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,

      -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,
      -95,  -95,  -95,  -95,  -95,  -95,  -95
    },

    {
       13,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,
      -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,
      -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,
      -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,
      -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,
      -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,
      -96,  -96,  -96,  -96,  -96,  -96,  -96
    },

    {
       13,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,

      -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,
      -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,
      -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,
      -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,
      -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,
      -97,  -97,  -97,  -97,  -97,  -97,  -97
    },

    {
       13,  -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,
      -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,   98,  -98,
      -98,  -98,  -98,  -98,  -98,  -98,  -98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,  -98,  -98,  -98,  -98,  -98,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,
      -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,
      -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,
      -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,
      -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,
      -99,  -99,  -99,  -99,  -99,  -99,   98,   98,   98,  -99,
      -99,  -99,  -99,  -99,  -99,  -99,  -99

    },

    {
       13, -100, -100, -100, -100, -100, -100, -100, -100, -100,
     -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
     -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
     -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
     -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
     -100, -100, -100, -100, -100, -100, -100, -100,  188, -100,
     -100, -100, -100, -100, -100, -100, -100
    },

    {
       13, -101, -101, -101, -101, -101, -101, -101, -101, -101,
     -101, -101, -101, -101, -101, -101, -101, -101, -101, -101,
     -101, -101, -101, -101, -101, -101, -101, -101, -101, -101,

     -101, -101, -101, -101, -101, -101, -101, -101, -101, -101,
     -101, -101, -101, -101, -101, -101, -101, -101, -101, -101,
     -101, -101, -101, -101, -101, -101,  189,  189,  189, -101,
     -101, -101, -101, -101, -101, -101, -101
    },

    {
       13, -102, -102, -102, -102, -102, -102, -102, -102, -102,
     -102, -102, -102, -102, -102, -102, -102, -102, -102, -102,
     -102, -102, -102, -102, -102, -102, -102, -102, -102, -102,
     -102, -102, -102, -102, -102, -102, -102, -102, -102, -102,
     -102, -102, -102, -102, -102, -102, -102, -102, -102, -102,
     -102, -102, -102, -102, -102, -102,  190,  190, -102, -102,

     -102, -102, -102, -102, -102, -102, -102
    },

    {
       13, -103, -103, -103, -103, -103, -103, -103, -103, -103,
     -103, -103, -103, -103, -103, -103, -103, -103, -103, -103,
     -103, -103, -103, -103, -103, -103, -103, -103, -103, -103,
     -103, -103, -103, -103, -103, -103, -103, -103, -103, -103,
     -103, -103, -103, -103, -103, -103, -103, -103, -103, -103,
     -103, -103, -103, -103, -103, -103,  191,  191,  191, -103,
     -103, -103, -103, -103, -103, -103, -103
    },

    {
       13, -104, -104, -104, -104, -104, -104, -104, -104, -104,
     -104, -104, -104, -104, -104, -104, -104, -104, -104, -104,

     -104, -104, -104, -104, -104, -104, -104, -104, -104, -104,
     -104, -104, -104, -104, -104, -104, -104, -104, -104, -104,
     -104, -104, -104, -104, -104, -104, -104, -104, -104, -104,
     -104, -104, -104, -104, -104, -104, -104,  192,  192, -104,
     -104, -104, -104, -104, -104, -104, -104
    },

    {
       13, -105, -105, -105, -105, -105, -105, -105, -105, -105,
     -105, -105, -105, -105, -105, -105, -105, -105, -105, -105,
     -105, -105, -105, -105, -105, -105, -105, -105, -105, -105,
     -105, -105, -105, -105, -105, -105, -105, -105, -105, -105,
     -105, -105, -105, -105, -105, -105, -105, -105, -105, -105,

     -105, -105, -105, -105, -105, -105,  193,  193,  193, -105,
     -105, -105, -105, -105, -105, -105, -105
    },

    {
       13, -106, -106, -106, -106, -106, -106, -106, -106, -106,
     -106, -106, -106, -106, -106, -106, -106, -106, -106, -106,
     -106, -106, -106, -106, -106, -106, -106, -106, -106, -106,
     -106, -106, -106, -106, -106, -106, -106, -106, -106, -106,
     -106, -106, -106, -106, -106, -106, -106, -106, -106, -106,
     -106, -106, -106, -106, -106, -106,  194, -106, -106, -106,
     -106, -106, -106, -106, -106, -106, -106
    },

    {
       13, -107, -107, -107, -107, -107, -107, -107, -107, -107,

     -107, -107, -107, -107, -107, -107, -107, -107,   98, -107,
     -107, -107, -107, -107, -107, -107, -107,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  195,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -107, -107, -107, -107, -107,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -108, -108, -108, -108, -108, -108, -108, -108, -108,
     -108, -108, -108, -108, -108, -108, -108, -108,   98, -108,
     -108, -108, -108, -108, -108, -108, -108,   98,   98,   98,
       98,  196,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -108, -108, -108, -108, -108,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -109, -109, -109, -109, -109, -109, -109, -109, -109,
     -109, -109, -109, -109, -109, -109, -109, -109,   98, -109,
     -109, -109, -109, -109, -109, -109, -109,   98,   98,   98,
      197,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -109, -109, -109, -109, -109,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -110, -110, -110, -110, -110, -110, -110, -110, -110,
     -110, -110, -110, -110, -110, -110, -110, -110,   98, -110,
     -110, -110, -110, -110, -110, -110, -110,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -110, -110, -110, -110, -110,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111, -111, -111, -111, -111, -111, -111, -111, -111,

     -111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111, -111, -111, -111, -111, -111
    },

    {
       13, -112, -112, -112, -112, -112, -112, -112, -112, -112,
     -112, -112, -112, -112, -112, -112, -112, -112,   98, -112,
     -112, -112, -112, -112, -112, -112, -112,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -112, -112, -112, -112, -112,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -113, -113, -113, -113, -113, -113, -113, -113, -113,
     -113, -113, -113, -113, -113, -113, -113, -113,   98, -113,
     -113, -113, -113, -113, -113, -113, -113,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  198,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -113, -113, -113, -113, -113,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -114, -114, -114, -114, -114, -114, -114, -114, -114,
     -114, -114, -114, -114, -114, -114, -114, -114,   98, -114,

     -114, -114, -114, -114, -114, -114, -114,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  199,   98,   98,   98,   98,
       98,   98,   98,   98, -114, -114, -114, -114, -114,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -115, -115, -115, -115, -115, -115, -115, -115, -115,
     -115, -115, -115, -115, -115, -115, -115, -115,   98, -115,
     -115, -115, -115, -115, -115, -115, -115,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,  200,   98, -115, -115, -115, -115, -115,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -116, -116, -116, -116, -116, -116, -116, -116, -116,
     -116, -116, -116, -116, -116, -116, -116, -116,   98, -116,
     -116, -116, -116, -116, -116, -116, -116,   98,   98,   98,
       98,   98,   98,  201,   98,   98,   98,   98,   98,  202,
       98,   98,   98,   98,   98,   98,  203,   98,   98,   98,
       98,   98,   98,   98, -116, -116, -116, -116, -116,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -117, -117, -117, -117, -117, -117, -117, -117, -117,

     -117, -117, -117, -117, -117, -117, -117, -117,   98, -117,
     -117, -117, -117, -117, -117, -117, -117,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  204,   98,   98,   98,
       98,   98,   98,   98, -117, -117, -117, -117, -117,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -118, -118, -118, -118, -118, -118, -118, -118, -118,
     -118, -118, -118, -118, -118, -118, -118, -118,   98, -118,
     -118, -118, -118, -118, -118, -118, -118,   98,   98,   98,
      205,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -118, -118, -118, -118, -118,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -119, -119, -119, -119, -119, -119, -119, -119, -119,
     -119, -119, -119, -119, -119, -119, -119, -119,   98, -119,
     -119, -119, -119, -119, -119, -119, -119,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  206,   98,   98,
       98,   98,   98,   98, -119, -119, -119, -119, -119,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -120, -120, -120, -120, -120, -120, -120, -120, -120,
     -120, -120, -120, -120, -120, -120, -120, -120,   98, -120,
     -120, -120, -120, -120, -120, -120, -120,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  207,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -120, -120, -120, -120, -120,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -121, -121, -121, -121, -121, -121, -121, -121, -121,
     -121, -121, -121, -121, -121, -121, -121, -121,   98, -121,
     -121, -121, -121, -121, -121, -121, -121,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  208,   98,   98,   98,   98,
       98,   98,   98,   98, -121, -121, -121, -121, -121,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -122, -122, -122, -122, -122, -122, -122, -122, -122,
     -122, -122, -122, -122, -122, -122, -122, -122,   98, -122,
     -122, -122, -122, -122, -122, -122, -122,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  209,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -122, -122, -122, -122, -122,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -123, -123, -123, -123, -123, -123, -123, -123, -123,
     -123, -123, -123, -123, -123, -123, -123, -123,   98, -123,
     -123, -123, -123, -123, -123, -123, -123,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  210,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -123, -123, -123, -123, -123,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -124, -124, -124, -124, -124, -124, -124, -124, -124,
     -124, -124, -124, -124, -124, -124, -124, -124,   98, -124,

     -124, -124, -124, -124, -124, -124, -124,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  211,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -124, -124, -124, -124, -124,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -125, -125, -125, -125, -125, -125, -125, -125, -125,
     -125, -125, -125, -125, -125, -125, -125, -125,   98, -125,
     -125, -125, -125, -125, -125, -125, -125,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  212,

       98,   98,   98,   98, -125, -125, -125, -125, -125,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -126, -126, -126, -126, -126, -126, -126, -126, -126,
     -126, -126, -126, -126, -126, -126, -126, -126,   98, -126,
     -126, -126, -126, -126, -126, -126, -126,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,  213,   98,
       98,   98,   98,   98, -126, -126, -126, -126, -126,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -127, -127, -127, -127, -127, -127, -127, -127, -127,

     -127, -127, -127, -127, -127, -127, -127, -127,   98, -127,
     -127, -127, -127, -127, -127, -127, -127,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  214,   98,   98,   98,   98,  215,  216,   98,   98,
       98,   98,   98,   98, -127, -127, -127, -127, -127,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -128, -128, -128, -128, -128, -128, -128, -128, -128,
     -128, -128, -128, -128, -128, -128, -128, -128,   98, -128,
     -128, -128, -128, -128, -128, -128, -128,   98,  217,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,  218,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -128, -128, -128, -128, -128,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -129, -129, -129, -129, -129, -129, -129, -129, -129,
     -129, -129, -129, -129, -129, -129, -129, -129,   98, -129,
     -129, -129, -129, -129, -129, -129, -129,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  219,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -129, -129, -129, -129, -129,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -130, -130, -130, -130, -130, -130, -130, -130, -130,
     -130, -130, -130, -130, -130, -130, -130, -130,   98, -130,
     -130, -130, -130, -130, -130, -130, -130,   98,  220,   98,
       98,   98,   98,  221,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -130, -130, -130, -130, -130,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -131, -131, -131, -131, -131, -131, -131, -131, -131,
     -131, -131, -131, -131, -131, -131, -131, -131,   98, -131,
     -131, -131, -131, -131, -131, -131, -131,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,  222,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -131, -131, -131, -131, -131,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -132, -132, -132, -132, -132, -132, -132, -132, -132,
     -132, -132, -132, -132, -132, -132, -132, -132,   98, -132,
     -132, -132, -132, -132, -132, -132, -132,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  223,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -132, -132, -132, -132, -132,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -133, -133, -133, -133, -133, -133, -133, -133, -133,
     -133, -133, -133, -133, -133, -133, -133, -133,   98, -133,
     -133, -133, -133, -133, -133, -133, -133,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  224,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -133, -133, -133, -133, -133,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -134, -134, -134, -134, -134, -134, -134, -134, -134,
     -134, -134, -134, -134, -134, -134, -134, -134,   98, -134,

     -134, -134, -134, -134, -134, -134, -134,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  225,   98,   98,
       98,   98,   98,   98, -134, -134, -134, -134, -134,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -135, -135, -135, -135, -135, -135, -135, -135, -135,
     -135, -135, -135, -135, -135, -135, -135, -135,   98, -135,
     -135, -135, -135, -135, -135, -135, -135,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  226,   98,   98,

       98,   98,   98,   98, -135, -135, -135, -135, -135,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -136, -136, -136, -136, -136, -136, -136, -136, -136,
     -136, -136, -136, -136, -136, -136, -136, -136,   98, -136,
     -136, -136, -136, -136, -136, -136, -136,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  227,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -136, -136, -136, -136, -136,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -137, -137, -137, -137, -137, -137, -137, -137, -137,

     -137, -137, -137, -137, -137, -137, -137, -137,   98, -137,
     -137, -137, -137, -137, -137, -137, -137,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  228,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -137, -137, -137, -137, -137,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -138, -138, -138, -138, -138, -138, -138, -138, -138,
     -138, -138, -138, -138, -138, -138, -138, -138,   98, -138,
     -138, -138, -138, -138, -138, -138, -138,   98,   98,   98,
       98,  229,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -138, -138, -138, -138, -138,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -139, -139, -139, -139, -139, -139, -139, -139, -139,
     -139, -139, -139, -139, -139, -139, -139, -139,   98, -139,
     -139, -139, -139, -139, -139, -139, -139,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  230,   98,   98,
       98,   98,   98,   98, -139, -139, -139, -139, -139,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -140, -140, -140, -140, -140, -140, -140, -140, -140,
     -140, -140, -140, -140, -140, -140, -140, -140,   98, -140,
     -140, -140, -140, -140, -140, -140, -140,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  231,   98,   98,   98,
       98,   98,   98,   98, -140, -140, -140, -140, -140,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -141, -141, -141, -141, -141, -141, -141, -141, -141,
     -141, -141, -141, -141, -141, -141, -141, -141,   98, -141,
     -141, -141, -141, -141, -141, -141, -141,   98,   98,   98,

       98,   98,   98,   98,  232,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -141, -141, -141, -141, -141,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -142, -142, -142, -142, -142, -142, -142, -142, -142,
     -142, -142, -142, -142, -142, -142, -142, -142,   98, -142,
     -142, -142, -142, -142, -142, -142, -142,   98,   98,   98,
      233,   98,   98,   98,   98,   98,   98,   98,   98,  234,
       98,   98,   98,   98,   98,   98,  235,  236,   98,   98,
       98,   98,   98,   98, -142, -142, -142, -142, -142,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -143, -143, -143, -143, -143, -143, -143, -143, -143,
     -143, -143, -143, -143, -143, -143, -143, -143,   98, -143,
     -143, -143, -143, -143, -143, -143, -143,   98,   98,  237,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -143, -143, -143, -143, -143,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -144, -144, -144, -144, -144, -144, -144, -144, -144,
     -144, -144, -144, -144, -144, -144, -144, -144,   98, -144,

     -144, -144, -144, -144, -144, -144, -144,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
      238,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -144, -144, -144, -144, -144,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -145, -145, -145, -145, -145, -145, -145, -145, -145,
     -145, -145, -145, -145, -145, -145, -145, -145,   98, -145,
     -145, -145, -145, -145, -145, -145, -145,   98,  239,   98,
       98,   98,   98,   98,   98,   98,  240,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,  241,   98,

       98,   98,   98,   98, -145, -145, -145, -145, -145,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -146, -146, -146, -146, -146, -146, -146, -146, -146,
     -146, -146, -146, -146, -146, -146, -146, -146,   98, -146,
     -146, -146, -146, -146, -146, -146, -146,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  242,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -146, -146, -146, -146, -146,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -147, -147, -147, -147, -147, -147, -147, -147, -147,

     -147, -147, -147, -147, -147, -147, -147, -147,   98, -147,
     -147, -147, -147, -147, -147, -147, -147,   98,   98,   98,
       98,  243,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -147, -147, -147, -147, -147,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -148, -148, -148, -148, -148, -148, -148, -148, -148,
     -148, -148, -148, -148, -148, -148, -148, -148,   98, -148,
     -148, -148, -148, -148, -148, -148, -148,   98,   98,   98,
       98,   98,  244,   98,   98,   98,  245,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -148, -148, -148, -148, -148,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -149, -149, -149, -149, -149, -149, -149, -149, -149,
     -149, -149, -149, -149, -149, -149, -149, -149,   98, -149,
     -149, -149, -149, -149, -149, -149, -149,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  246,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -149, -149, -149, -149, -149,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -150, -150, -150, -150, -150, -150, -150, -150, -150,
     -150, -150, -150, -150, -150, -150, -150, -150,   98, -150,
     -150, -150, -150, -150, -150, -150, -150,   98,   98,   98,
       98,   98,  247,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -150, -150, -150, -150, -150,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -151, -151, -151, -151, -151, -151, -151, -151, -151,
     -151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
     -151, -151, -151, -151, -151, -151, -151, -151, -151, -151,

     -151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
     -151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
     -151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
     -151, -151, -151, -151, -151, -151, -151
    },

    {
       13, -152, -152, -152, -152, -152, -152, -152, -152, -152,
     -152, -152, -152, -152, -152, -152, -152, -152,   98, -152,
     -152, -152, -152, -152, -152, -152, -152,   98,  248,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -152, -152, -152, -152, -152,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -153, -153, -153, -153, -153, -153, -153, -153, -153,
     -153, -153, -153, -153, -153, -153, -153, -153,   98, -153,
     -153, -153, -153, -153, -153, -153, -153,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  249,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -153, -153, -153, -153, -153,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -154, -154, -154, -154, -154, -154, -154, -154, -154,
     -154, -154, -154, -154, -154, -154, -154, -154, -154, -154,

     -154, -154, -154, -154, -154, -154, -154, -154, -154, -154,
     -154, -154, -154, -154, -154, -154, -154, -154, -154, -154,
     -154, -154, -154, -154, -154, -154, -154, -154, -154, -154,
     -154, -154, -154, -154, -154, -154, -154, -154, -154, -154,
     -154, -154, -154, -154, -154, -154, -154
    },

    {
       13, -155, -155, -155, -155, -155, -155, -155, -155, -155,
     -155, -155, -155, -155, -155, -155, -155, -155,   98, -155,
     -155, -155, -155, -155, -155, -155, -155,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -155, -155, -155, -155, -155,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -156, -156, -156, -156, -156, -156, -156, -156, -156,
     -156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
     -156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
     -156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
     -156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
     -156, -156, -156, -156, -156, -156,  155,  155,  155, -156,
     -156, -156, -156, -156, -156, -156, -156
    },

    {
       13, -157, -157, -157, -157, -157, -157, -157, -157, -157,

     -157, -157, -157, -157, -157, -157, -157, -157, -157, -157,
     -157, -157, -157, -157, -157, -157, -157, -157, -157, -157,
     -157, -157, -157, -157, -157, -157, -157, -157, -157, -157,
     -157, -157, -157, -157, -157, -157, -157, -157, -157, -157,
     -157, -157, -157, -157, -157, -157,  155,  155,  155, -157,
     -157, -157, -157, -157, -157, -157, -157
    },

    {
       13, -158, -158, -158, -158, -158, -158, -158, -158, -158,
     -158, -158, -158, -158, -158, -158, -158, -158, -158, -158,
     -158, -158, -158, -158, -158, -158, -158, -158, -158, -158,
     -158, -158, -158, -158, -158, -158, -158, -158, -158, -158,

     -158, -158, -158, -158, -158, -158, -158, -158, -158, -158,
     -158, -158, -158, -158, -158, -158,  155,  155,  155, -158,
     -158, -158, -158, -158, -158, -158, -158
    },

    {
       13, -159, -159, -159, -159, -159, -159, -159, -159, -159,
     -159, -159, -159, -159, -159, -159, -159, -159, -159, -159,
     -159, -159, -159, -159, -159, -159, -159, -159, -159, -159,
     -159, -159, -159, -159, -159, -159, -159, -159, -159, -159,
     -159, -159, -159, -159, -159, -159, -159, -159, -159, -159,
     -159, -159, -159, -159, -159, -159,  155,  155,  155, -159,
     -159, -159, -159, -159, -159, -159, -159

    },

    {
       13, -160, -160, -160, -160, -160, -160, -160, -160, -160,
     -160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
     -160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
     -160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
     -160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
     -160, -160, -160, -160, -160, -160,  250,  250,  250, -160,
     -160, -160, -160, -160, -160, -160, -160
    },

    {
       13, -161, -161, -161, -161, -161, -161, -161, -161, -161,
     -161, -161, -161, -161, -161, -161, -161, -161, -161, -161,
     -161, -161, -161, -161, -161, -161, -161, -161, -161, -161,

     -161, -161, -161, -161, -161, -161, -161, -161, -161, -161,
     -161, -161, -161, -161, -161, -161, -161, -161, -161, -161,
     -161, -161, -161, -161, -161, -161,  251,  251,  251, -161,
     -161, -161, -161, -161, -161, -161, -161
    },

    {
       13, -162, -162, -162, -162, -162, -162, -162, -162, -162,
     -162, -162, -162, -162, -162, -162, -162, -162, -162, -162,
     -162, -162, -162, -162, -162, -162, -162, -162, -162, -162,
     -162, -162, -162, -162, -162, -162, -162, -162, -162, -162,
     -162, -162, -162, -162, -162, -162, -162, -162, -162, -162,
     -162, -162, -162, -162, -162, -162,  252,  252,  252, -162,

     -162, -162, -162, -162, -162, -162, -162
    },

    {
       13,  163,  163,  163,  163,  163,  163,  163,  163, -163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163,  163,  163,  163,  163
    },

    {
       13, -164,  164,  165,  165, -164, -164, -164, -164, -164,
     -164, -164, -164, -164, -164,  166, -164, -164, -164, -164,

     -164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
     -164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
     -164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
     -164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
     -164, -164, -164, -164, -164, -164, -164
    },

    {
       13, -165,  253,  253,  253, -165, -165, -165, -165,  254,
     -165, -165, -165, -165, -165,  255, -165, -165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165, -165, -165, -165,

     -165, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165
    },

    {
       13, -166, -166, -166, -166, -166, -166, -166, -166, -166,
     -166, -166, -166, -166, -166,  256, -166, -166, -166, -166,
     -166, -166, -166, -166, -166, -166, -166, -166, -166, -166,
     -166, -166, -166, -166, -166, -166, -166, -166, -166, -166,
     -166, -166, -166, -166, -166, -166, -166, -166, -166, -166,
     -166, -166, -166, -166, -166, -166, -166, -166, -166, -166,
     -166, -166, -166, -166, -166, -166, -166
    },

    {
       13,  167,  167,  167,  167,  167,  167,  167,  167,  167,

      167,  167, -167,  167,  167,  167,  167, -167,  167,  167,
      167,  167,  167,  167,  167,  167,  167,  167,  167,  167,
      167,  167,  167,  167,  167,  167,  167,  167,  167,  167,
      167,  167,  167,  167,  167,  167,  167,  167,  167,  167,
      167,  167,  167,  167,  167,  167,  167,  167,  167,  167,
      167,  167,  167,  167,  167,  167,  167
    },

    {
       13, -168, -168, -168, -168, -168, -168, -168, -168, -168,
     -168, -168,  168, -168, -168, -168, -168,  169, -168, -168,
     -168, -168, -168, -168, -168, -168, -168, -168, -168, -168,
     -168, -168, -168, -168, -168, -168, -168, -168, -168, -168,

     -168, -168, -168, -168, -168, -168, -168, -168, -168, -168,
     -168, -168, -168, -168, -168, -168, -168, -168, -168, -168,
     -168, -168, -168, -168, -168, -168, -168
    },

    {
       13, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169, -169, -169, -169, -169, -169

    },

    {
       13, -170, -170, -170, -170, -170, -170, -170, -170, -170,
     -170, -170, -170, -170, -170, -170, -170, -170, -170, -170,
     -170, -170, -170, -170, -170, -170, -170, -170, -170, -170,
     -170, -170, -170, -170, -170, -170, -170, -170, -170, -170,
     -170, -170, -170, -170, -170, -170, -170, -170, -170, -170,
     -170, -170, -170, -170, -170, -170, -170, -170, -170, -170,
     -170, -170, -170, -170, -170, -170, -170
    },

    {
       13,  171,  171,  171,  171,  171, -171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  172,  171,  171,  171,  171,

      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171
    },

    {
       13,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  172,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,

      171,  171,  171,  171,  171,  171,  171
    },

    {
       13, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173, -173, -173, -173, -173, -173
    },

    {
       13,  174,  174,  174,  174,  174,  174,  174,  174, -174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,

      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174
    },

    {
       13, -175,  175,  176,  176, -175, -175, -175, -175, -175,
     -175, -175, -175, -175, -175,  177, -175, -175, -175, -175,
     -175, -175, -175, -175, -175, -175, -175, -175, -175, -175,
     -175, -175, -175, -175, -175, -175, -175, -175, -175, -175,
     -175, -175, -175, -175, -175, -175, -175, -175, -175, -175,

     -175, -175, -175, -175, -175, -175, -175, -175, -175, -175,
     -175, -175, -175, -175, -175, -175, -175
    },

    {
       13, -176,  257,  257,  257, -176, -176, -176, -176,  258,
     -176, -176, -176, -176, -176,  259, -176, -176, -176, -176,
     -176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
     -176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
     -176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
     -176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
     -176, -176, -176, -176, -176, -176, -176
    },

    {
       13, -177, -177, -177, -177, -177, -177, -177, -177, -177,

     -177, -177, -177, -177, -177,  260, -177, -177, -177, -177,
     -177, -177, -177, -177, -177, -177, -177, -177, -177, -177,
     -177, -177, -177, -177, -177, -177, -177, -177, -177, -177,
     -177, -177, -177, -177, -177, -177, -177, -177, -177, -177,
     -177, -177, -177, -177, -177, -177, -177, -177, -177, -177,
     -177, -177, -177, -177, -177, -177, -177
    },

    {
       13,  178,  178,  178,  178,  178,  178,  178,  178, -178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178, -178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,

      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178
    },

    {
       13, -179,  179,  180,  180, -179, -179, -179, -179, -179,
     -179, -179, -179, -179, -179,  182, -179, -179, -179, -179,
     -179, -179, -179, -179, -179, -179, -179, -179, -179, -179,
     -179, -179, -179, -179, -179, -179, -179, -179, -179, -179,
     -179, -179, -179, -179, -179, -179, -179, -179, -179, -179,
     -179, -179, -179, -179, -179, -179, -179, -179, -179, -179,
     -179, -179, -179, -179, -179, -179, -179

    },

    {
       13, -180,  261,  261,  261, -180, -180, -180, -180,  262,
     -180, -180, -180, -180, -180,  263, -180, -180, -180, -180,
     -180, -180, -180, -180, -180, -180, -180, -180, -180, -180,
     -180, -180, -180, -180, -180, -180, -180, -180, -180, -180,
     -180, -180, -180, -180, -180, -180, -180, -180, -180, -180,
     -180, -180, -180, -180, -180, -180, -180, -180, -180, -180,
     -180, -180, -180, -180, -180, -180, -180
    },

    {
       13, -181, -181, -181, -181, -181, -181, -181, -181, -181,
     -181, -181, -181, -181, -181, -181, -181, -181, -181, -181,
     -181, -181, -181, -181, -181, -181, -181, -181, -181, -181,

     -181, -181, -181, -181, -181, -181, -181, -181, -181, -181,
     -181, -181, -181, -181, -181, -181, -181, -181, -181, -181,
     -181, -181, -181, -181, -181, -181, -181, -181, -181, -181,
     -181, -181, -181, -181, -181, -181, -181
    },

    {
       13, -182, -182, -182, -182, -182, -182, -182, -182, -182,
     -182, -182, -182, -182, -182,  264, -182, -182, -182, -182,
     -182, -182, -182, -182, -182, -182, -182, -182, -182, -182,
     -182, -182, -182, -182, -182, -182, -182, -182, -182, -182,
     -182, -182, -182, -182, -182, -182, -182, -182, -182, -182,
     -182, -182, -182, -182, -182, -182, -182, -182, -182, -182,

     -182, -182, -182, -182, -182, -182, -182
    },

    {
       13, -183, -183, -183, -183, -183, -183, -183, -183, -183,
     -183, -183, -183, -183, -183, -183, -183, -183, -183, -183,
     -183, -183, -183, -183, -183, -183, -183, -183, -183, -183,
     -183, -183, -183, -183, -183, -183, -183, -183, -183, -183,
     -183, -183, -183, -183, -183, -183, -183, -183, -183, -183,
     -183, -183, -183, -183, -183, -183, -183, -183, -183, -183,
     -183, -183, -183, -183, -183, -183, -183
    },

    {
       13,  184,  184, -184, -184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,

      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184
    },

    {
       13, -185, -185, -185, -185, -185, -185, -185, -185, -185,
     -185, -185, -185, -185, -185, -185, -185, -185,  185, -185,
     -185, -185, -185, -185, -185, -185, -185, -185, -185, -185,
     -185, -185,   92, -185, -185, -185, -185, -185, -185, -185,
     -185, -185, -185, -185, -185, -185, -185, -185, -185, -185,

     -185, -185, -185, -185, -185, -185, -185, -185, -185, -185,
     -185, -185, -185, -185, -185, -185, -185
    },

    {
       13, -186, -186, -186, -186, -186, -186, -186, -186, -186,
     -186, -186, -186, -186, -186, -186, -186, -186,  187, -186,
     -186, -186, -186, -186, -186, -186, -186, -186, -186, -186,
     -186, -186, -186, -186, -186, -186, -186, -186, -186, -186,
     -186, -186, -186, -186, -186, -186, -186, -186, -186, -186,
     -186, -186, -186, -186, -186, -186, -186, -186, -186, -186,
     -186, -186, -186, -186, -186, -186, -186
    },

    {
       13, -187, -187, -187, -187, -187, -187, -187, -187, -187,

     -187, -187, -187, -187, -187, -187, -187, -187,  187, -187,
     -187, -187, -187, -187, -187, -187, -187, -187, -187, -187,
     -187, -187, -187, -187, -187, -187, -187, -187, -187, -187,
     -187, -187, -187, -187, -187, -187, -187, -187, -187, -187,
     -187, -187, -187, -187, -187, -187, -187, -187, -187, -187,
     -187, -187, -187, -187, -187, -187, -187
    },

    {
       13, -188, -188, -188, -188, -188, -188, -188, -188, -188,
     -188, -188, -188, -188, -188, -188, -188, -188, -188, -188,
     -188, -188, -188, -188, -188, -188, -188, -188, -188, -188,
     -188, -188, -188, -188, -188, -188, -188, -188, -188, -188,

     -188, -188, -188, -188, -188, -188, -188, -188, -188, -188,
     -188, -188, -188, -188, -188, -188,   98,   98,   98, -188,
     -188, -188, -188, -188, -188, -188, -188
    },

    {
       13, -189, -189, -189, -189, -189, -189, -189, -189, -189,
     -189, -189, -189, -189, -189, -189, -189, -189, -189, -189,
     -189, -189, -189, -189, -189, -189, -189, -189, -189, -189,
     -189, -189, -189, -189, -189, -189, -189, -189, -189, -189,
     -189, -189, -189, -189, -189, -189, -189, -189, -189, -189,
     -189, -189, -189, -189, -189, -189,   98,   98,   98, -189,
     -189, -189, -189, -189, -189, -189, -189

    },

    {
       13, -190, -190, -190, -190, -190, -190, -190, -190, -190,
     -190, -190, -190, -190, -190, -190, -190, -190, -190, -190,
     -190, -190, -190, -190, -190, -190, -190, -190, -190, -190,
     -190, -190, -190, -190, -190, -190, -190, -190, -190, -190,
     -190, -190, -190, -190, -190, -190, -190, -190, -190, -190,
     -190, -190, -190, -190, -190, -190,   98,   98,   98, -190,
     -190, -190, -190, -190, -190, -190, -190
    },

    {
       13, -191, -191, -191, -191, -191, -191, -191, -191, -191,
     -191, -191, -191, -191, -191, -191, -191, -191, -191, -191,
     -191, -191, -191, -191, -191, -191, -191, -191, -191, -191,

     -191, -191, -191, -191, -191, -191, -191, -191, -191, -191,
     -191, -191, -191, -191, -191, -191, -191, -191, -191, -191,
     -191, -191, -191, -191, -191, -191,   98,   98,   98, -191,
     -191, -191, -191, -191, -191, -191, -191
    },

    {
       13, -192, -192, -192, -192, -192, -192, -192, -192, -192,
     -192, -192, -192, -192, -192, -192, -192, -192, -192, -192,
     -192, -192, -192, -192, -192, -192, -192, -192, -192, -192,
     -192, -192, -192, -192, -192, -192, -192, -192, -192, -192,
     -192, -192, -192, -192, -192, -192, -192, -192, -192, -192,
     -192, -192, -192, -192, -192, -192,  265,  265,  265, -192,

     -192, -192, -192, -192, -192, -192, -192
    },

    {
       13, -193, -193, -193, -193, -193, -193, -193, -193, -193,
     -193, -193, -193, -193, -193, -193, -193, -193, -193, -193,
     -193, -193, -193, -193, -193, -193, -193, -193, -193, -193,
     -193, -193, -193, -193, -193, -193, -193, -193, -193, -193,
     -193, -193, -193, -193, -193, -193, -193, -193, -193, -193,
     -193, -193, -193, -193, -193, -193,  266,  266,  266, -193,
     -193, -193, -193, -193, -193, -193, -193
    },

    {
       13, -194, -194, -194, -194, -194, -194, -194, -194, -194,
     -194, -194, -194, -194, -194, -194, -194, -194, -194, -194,

     -194, -194, -194, -194, -194, -194, -194, -194, -194, -194,
     -194, -194, -194, -194, -194, -194, -194, -194, -194, -194,
     -194, -194, -194, -194, -194, -194, -194, -194, -194, -194,
     -194, -194, -194, -194, -194, -194,  267,  267,  267, -194,
     -194, -194, -194, -194, -194, -194, -194
    },

    {
       13, -195, -195, -195, -195, -195, -195, -195, -195, -195,
     -195, -195, -195, -195, -195, -195, -195, -195,   98, -195,
     -195, -195, -195, -195, -195, -195, -195,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -195, -195, -195, -195, -195,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -196, -196, -196, -196, -196, -196, -196, -196, -196,
     -196, -196, -196, -196, -196, -196, -196, -196,   98, -196,
     -196, -196, -196, -196, -196, -196, -196,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -196, -196, -196, -196, -196,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -197, -197, -197, -197, -197, -197, -197, -197, -197,

     -197, -197, -197, -197, -197, -197, -197, -197,   98, -197,
     -197, -197, -197, -197, -197, -197, -197,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -197, -197, -197, -197, -197,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -198, -198, -198, -198, -198, -198, -198, -198, -198,
     -198, -198, -198, -198, -198, -198, -198, -198,   98, -198,
     -198, -198, -198, -198, -198, -198, -198,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,  268,   98,   98,   98,
       98,   98,   98,   98, -198, -198, -198, -198, -198,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -199, -199, -199, -199, -199, -199, -199, -199, -199,
     -199, -199, -199, -199, -199, -199, -199, -199,   98, -199,
     -199, -199, -199, -199, -199, -199, -199,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  269,   98,   98,   98,   98,
       98,   98,   98,   98, -199, -199, -199, -199, -199,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -200, -200, -200, -200, -200, -200, -200, -200, -200,
     -200, -200, -200, -200, -200, -200, -200, -200,   98, -200,
     -200, -200, -200, -200, -200, -200, -200,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -200, -200, -200, -200, -200,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -201, -201, -201, -201, -201, -201, -201, -201, -201,
     -201, -201, -201, -201, -201, -201, -201, -201,   98, -201,
     -201, -201, -201, -201, -201, -201, -201,   98,  270,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -201, -201, -201, -201, -201,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -202, -202, -202, -202, -202, -202, -202, -202, -202,
     -202, -202, -202, -202, -202, -202, -202, -202,   98, -202,
     -202, -202, -202, -202, -202, -202, -202,   98,   98,   98,
       98,   98,  271,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -202, -202, -202, -202, -202,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -203, -203, -203, -203, -203, -203, -203, -203, -203,
     -203, -203, -203, -203, -203, -203, -203, -203,   98, -203,
     -203, -203, -203, -203, -203, -203, -203,   98,   98,   98,
      272,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -203, -203, -203, -203, -203,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -204, -204, -204, -204, -204, -204, -204, -204, -204,
     -204, -204, -204, -204, -204, -204, -204, -204,   98, -204,

     -204, -204, -204, -204, -204, -204, -204,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  273,   98,   98,
       98,   98,   98,   98, -204, -204, -204, -204, -204,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -205, -205, -205, -205, -205, -205, -205, -205, -205,
     -205, -205, -205, -205, -205, -205, -205, -205,   98, -205,
     -205, -205, -205, -205, -205, -205, -205,   98,  274,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -205, -205, -205, -205, -205,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -206, -206, -206, -206, -206, -206, -206, -206, -206,
     -206, -206, -206, -206, -206, -206, -206, -206,   98, -206,
     -206, -206, -206, -206, -206, -206, -206,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  275,   98,   98,   98,   98,
       98,   98,   98,   98, -206, -206, -206, -206, -206,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -207, -207, -207, -207, -207, -207, -207, -207, -207,

     -207, -207, -207, -207, -207, -207, -207, -207,   98, -207,
     -207, -207, -207, -207, -207, -207, -207,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  276,   98,   98,   98,
       98,   98,   98,   98, -207, -207, -207, -207, -207,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -208, -208, -208, -208, -208, -208, -208, -208, -208,
     -208, -208, -208, -208, -208, -208, -208, -208,   98, -208,
     -208, -208, -208, -208, -208, -208, -208,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -208, -208, -208, -208, -208,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -209, -209, -209, -209, -209, -209, -209, -209, -209,
     -209, -209, -209, -209, -209, -209, -209, -209,   98, -209,
     -209, -209, -209, -209, -209, -209, -209,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
      277,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -209, -209, -209, -209, -209,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -210, -210, -210, -210, -210, -210, -210, -210, -210,
     -210, -210, -210, -210, -210, -210, -210, -210,   98, -210,
     -210, -210, -210, -210, -210, -210, -210,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  278,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -210, -210, -210, -210, -210,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -211, -211, -211, -211, -211, -211, -211, -211, -211,
     -211, -211, -211, -211, -211, -211, -211, -211,   98, -211,
     -211, -211, -211, -211, -211, -211, -211,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,  279,   98,
       98,   98,   98,   98, -211, -211, -211, -211, -211,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -212, -212, -212, -212, -212, -212, -212, -212, -212,
     -212, -212, -212, -212, -212, -212, -212, -212,   98, -212,
     -212, -212, -212, -212, -212, -212, -212,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  280,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -212, -212, -212, -212, -212,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -213, -213, -213, -213, -213, -213, -213, -213, -213,
     -213, -213, -213, -213, -213, -213, -213, -213,   98, -213,
     -213, -213, -213, -213, -213, -213, -213,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  281,   98,   98,   98,   98,
       98,   98,   98,   98, -213, -213, -213, -213, -213,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -214, -214, -214, -214, -214, -214, -214, -214, -214,
     -214, -214, -214, -214, -214, -214, -214, -214,   98, -214,

     -214, -214, -214, -214, -214, -214, -214,   98,   98,   98,
       98,   98,  282,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -214, -214, -214, -214, -214,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -215, -215, -215, -215, -215, -215, -215, -215, -215,
     -215, -215, -215, -215, -215, -215, -215, -215,   98, -215,
     -215, -215, -215, -215, -215, -215, -215,   98,   98,   98,
       98,   98,  283,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -215, -215, -215, -215, -215,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -216, -216, -216, -216, -216, -216, -216, -216, -216,
     -216, -216, -216, -216, -216, -216, -216, -216,   98, -216,
     -216, -216, -216, -216, -216, -216, -216,   98,   98,   98,
       98,   98,  284,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  285,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -216, -216, -216, -216, -216,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -217, -217, -217, -217, -217, -217, -217, -217, -217,

     -217, -217, -217, -217, -217, -217, -217, -217,   98, -217,
     -217, -217, -217, -217, -217, -217, -217,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -217, -217, -217, -217, -217,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -218, -218, -218, -218, -218, -218, -218, -218, -218,
     -218, -218, -218, -218, -218, -218, -218, -218,   98, -218,
     -218, -218, -218, -218, -218, -218, -218,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,  286,   98,
       98,   98,   98,   98, -218, -218, -218, -218, -218,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -219, -219, -219, -219, -219, -219, -219, -219, -219,
     -219, -219, -219, -219, -219, -219, -219, -219,   98, -219,
     -219, -219, -219, -219, -219, -219, -219,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  287,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -219, -219, -219, -219, -219,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -220, -220, -220, -220, -220, -220, -220, -220, -220,
     -220, -220, -220, -220, -220, -220, -220, -220,   98, -220,
     -220, -220, -220, -220, -220, -220, -220,   98,   98,   98,
       98,  288,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -220, -220, -220, -220, -220,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -221, -221, -221, -221, -221, -221, -221, -221, -221,
     -221, -221, -221, -221, -221, -221, -221, -221,   98, -221,
     -221, -221, -221, -221, -221, -221, -221,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  289,   98,   98,
       98,   98,   98,   98, -221, -221, -221, -221, -221,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -222, -222, -222, -222, -222, -222, -222, -222, -222,
     -222, -222, -222, -222, -222, -222, -222, -222,   98, -222,
     -222, -222, -222, -222, -222, -222, -222,   98,   98,   98,
       98,   98,  290,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -222, -222, -222, -222, -222,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -223, -223, -223, -223, -223, -223, -223, -223, -223,
     -223, -223, -223, -223, -223, -223, -223, -223,   98, -223,
     -223, -223, -223, -223, -223, -223, -223,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,  291,   98,
       98,   98,   98,   98, -223, -223, -223, -223, -223,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -224, -224, -224, -224, -224, -224, -224, -224, -224,
     -224, -224, -224, -224, -224, -224, -224, -224,   98, -224,

     -224, -224, -224, -224, -224, -224, -224,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  292,   98,   98,
       98,   98,   98,   98, -224, -224, -224, -224, -224,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -225, -225, -225, -225, -225, -225, -225, -225, -225,
     -225, -225, -225, -225, -225, -225, -225, -225,   98, -225,
     -225, -225, -225, -225, -225, -225, -225,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  293,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,  294,   98,

       98,   98,   98,   98, -225, -225, -225, -225, -225,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -226, -226, -226, -226, -226, -226, -226, -226, -226,
     -226, -226, -226, -226, -226, -226, -226, -226,   98, -226,
     -226, -226, -226, -226, -226, -226, -226,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  295,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -226, -226, -226, -226, -226,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -227, -227, -227, -227, -227, -227, -227, -227, -227,

     -227, -227, -227, -227, -227, -227, -227, -227,   98, -227,
     -227, -227, -227, -227, -227, -227, -227,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  296,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -227, -227, -227, -227, -227,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -228, -228, -228, -228, -228, -228, -228, -228, -228,
     -228, -228, -228, -228, -228, -228, -228, -228,   98, -228,
     -228, -228, -228, -228, -228, -228, -228,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  297,   98, -228, -228, -228, -228, -228,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -229, -229, -229, -229, -229, -229, -229, -229, -229,
     -229, -229, -229, -229, -229, -229, -229, -229,   98, -229,
     -229, -229, -229, -229, -229, -229, -229,   98,   98,   98,
       98,   98,  298,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -229, -229, -229, -229, -229,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -230, -230, -230, -230, -230, -230, -230, -230, -230,
     -230, -230, -230, -230, -230, -230, -230, -230,   98, -230,
     -230, -230, -230, -230, -230, -230, -230,   98,   98,   98,
       98,   98,  299,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -230, -230, -230, -230, -230,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -231, -231, -231, -231, -231, -231, -231, -231, -231,
     -231, -231, -231, -231, -231, -231, -231, -231,   98, -231,
     -231, -231, -231, -231, -231, -231, -231,   98,   98,   98,

       98,   98,   98,   98,   98,   98,  300,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -231, -231, -231, -231, -231,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -232, -232, -232, -232, -232, -232, -232, -232, -232,
     -232, -232, -232, -232, -232, -232, -232, -232,   98, -232,
     -232, -232, -232, -232, -232, -232, -232,   98,   98,   98,
       98,   98,   98,   98,   98,  301,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -232, -232, -232, -232, -232,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -233, -233, -233, -233, -233, -233, -233, -233, -233,
     -233, -233, -233, -233, -233, -233, -233, -233,   98, -233,
     -233, -233, -233, -233, -233, -233, -233,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  302,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -233, -233, -233, -233, -233,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -234, -234, -234, -234, -234, -234, -234, -234, -234,
     -234, -234, -234, -234, -234, -234, -234, -234,   98, -234,

     -234, -234, -234, -234, -234, -234, -234,   98,   98,   98,
       98,   98,  303,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -234, -234, -234, -234, -234,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -235, -235, -235, -235, -235, -235, -235, -235, -235,
     -235, -235, -235, -235, -235, -235, -235, -235,   98, -235,
     -235, -235, -235, -235, -235, -235, -235,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  304,   98,   98,   98,

       98,   98,   98,   98, -235, -235, -235, -235, -235,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -236, -236, -236, -236, -236, -236, -236, -236, -236,
     -236, -236, -236, -236, -236, -236, -236, -236,   98, -236,
     -236, -236, -236, -236, -236, -236, -236,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -236, -236, -236, -236, -236,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -237, -237, -237, -237, -237, -237, -237, -237, -237,

     -237, -237, -237, -237, -237, -237, -237, -237,   98, -237,
     -237, -237, -237, -237, -237, -237, -237,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  305,   98,   98,   98,
       98,   98,   98,   98, -237, -237, -237, -237, -237,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -238, -238, -238, -238, -238, -238, -238, -238, -238,
     -238, -238, -238, -238, -238, -238, -238, -238,   98, -238,
     -238, -238, -238, -238, -238, -238, -238,   98,   98,   98,
       98,   98,  306,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -238, -238, -238, -238, -238,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -239, -239, -239, -239, -239, -239, -239, -239, -239,
     -239, -239, -239, -239, -239, -239, -239, -239,   98, -239,
     -239, -239, -239, -239, -239, -239, -239,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  307,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -239, -239, -239, -239, -239,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -240, -240, -240, -240, -240, -240, -240, -240, -240,
     -240, -240, -240, -240, -240, -240, -240, -240,   98, -240,
     -240, -240, -240, -240, -240, -240, -240,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
      308,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -240, -240, -240, -240, -240,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -241, -241, -241, -241, -241, -241, -241, -241, -241,
     -241, -241, -241, -241, -241, -241, -241, -241,   98, -241,
     -241, -241, -241, -241, -241, -241, -241,   98,   98,   98,

       98,   98,  309,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -241, -241, -241, -241, -241,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -242, -242, -242, -242, -242, -242, -242, -242, -242,
     -242, -242, -242, -242, -242, -242, -242, -242,   98, -242,
     -242, -242, -242, -242, -242, -242, -242,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  310,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -242, -242, -242, -242, -242,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -243, -243, -243, -243, -243, -243, -243, -243, -243,
     -243, -243, -243, -243, -243, -243, -243, -243,   98, -243,
     -243, -243, -243, -243, -243, -243, -243,   98,  311,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -243, -243, -243, -243, -243,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -244, -244, -244, -244, -244, -244, -244, -244, -244,
     -244, -244, -244, -244, -244, -244, -244, -244,   98, -244,

     -244, -244, -244, -244, -244, -244, -244,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  312,   98,   98,   98,   98,
       98,   98,   98,   98, -244, -244, -244, -244, -244,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -245, -245, -245, -245, -245, -245, -245, -245, -245,
     -245, -245, -245, -245, -245, -245, -245, -245,   98, -245,
     -245, -245, -245, -245, -245, -245, -245,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  313,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -245, -245, -245, -245, -245,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -246, -246, -246, -246, -246, -246, -246, -246, -246,
     -246, -246, -246, -246, -246, -246, -246, -246,   98, -246,
     -246, -246, -246, -246, -246, -246, -246,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,  314,   98,
       98,   98,   98,   98, -246, -246, -246, -246, -246,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -247, -247, -247, -247, -247, -247, -247, -247, -247,

     -247, -247, -247, -247, -247, -247, -247, -247,   98, -247,
     -247, -247, -247, -247, -247, -247, -247,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  315,   98,   98,   98,   98,
       98,   98,   98,   98, -247, -247, -247, -247, -247,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -248, -248, -248, -248, -248, -248, -248, -248, -248,
     -248, -248, -248, -248, -248, -248, -248, -248,   98, -248,
     -248, -248, -248, -248, -248, -248, -248,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,  316,   98,   98,   98,   98,
       98,   98,   98,   98, -248, -248, -248, -248, -248,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -249, -249, -249, -249, -249, -249, -249, -249, -249,
     -249, -249, -249, -249, -249, -249, -249, -249,   98, -249,
     -249, -249, -249, -249, -249, -249, -249,   98,   98,   98,
       98,   98,  317,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -249, -249, -249, -249, -249,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -250, -250, -250, -250, -250, -250, -250, -250, -250,
     -250, -250, -250, -250, -250, -250, -250, -250, -250, -250,
     -250, -250, -250, -250, -250, -250, -250, -250, -250, -250,
     -250, -250, -250, -250, -250, -250, -250, -250, -250, -250,
     -250, -250, -250, -250, -250, -250, -250, -250, -250, -250,
     -250, -250, -250, -250, -250, -250,  155,  155,  155, -250,
     -250, -250, -250, -250, -250, -250, -250
    },

    {
       13, -251, -251, -251, -251, -251, -251, -251, -251, -251,
     -251, -251, -251, -251, -251, -251, -251, -251, -251, -251,
     -251, -251, -251, -251, -251, -251, -251, -251, -251, -251,

     -251, -251, -251, -251, -251, -251, -251, -251, -251, -251,
     -251, -251, -251, -251, -251, -251, -251, -251, -251, -251,
     -251, -251, -251, -251, -251, -251,  155,  155,  155, -251,
     -251, -251, -251, -251, -251, -251, -251
    },

    {
       13, -252, -252, -252, -252, -252, -252, -252, -252, -252,
     -252, -252, -252, -252, -252, -252, -252, -252, -252, -252,
     -252, -252, -252, -252, -252, -252, -252, -252, -252, -252,
     -252, -252, -252, -252, -252, -252, -252, -252, -252, -252,
     -252, -252, -252, -252, -252, -252, -252, -252, -252, -252,
     -252, -252, -252, -252, -252, -252,  155,  155,  155, -252,

     -252, -252, -252, -252, -252, -252, -252
    },

    {
       13, -253,  253,  253,  253, -253, -253, -253, -253,  254,
     -253, -253, -253, -253, -253,  255, -253, -253, -253, -253,
     -253, -253, -253, -253, -253, -253, -253, -253, -253, -253,
     -253, -253, -253, -253, -253, -253, -253, -253, -253, -253,
     -253, -253, -253, -253, -253, -253, -253, -253, -253, -253,
     -253, -253, -253, -253, -253, -253, -253, -253, -253, -253,
     -253, -253, -253, -253, -253, -253, -253
    },

    {
       13, -254, -254, -254, -254, -254, -254, -254, -254, -254,
     -254, -254, -254, -254, -254, -254, -254, -254, -254, -254,

     -254, -254, -254, -254, -254, -254, -254, -254, -254, -254,
     -254, -254, -254, -254, -254, -254, -254, -254, -254, -254,
     -254, -254, -254, -254, -254, -254, -254, -254, -254, -254,
     -254, -254, -254, -254, -254, -254, -254, -254, -254, -254,
     -254, -254, -254, -254, -254, -254, -254
    },

    {
       13, -255, -255, -255, -255, -255, -255, -255, -255, -255,
     -255, -255, -255, -255, -255,  318, -255, -255, -255, -255,
     -255, -255, -255, -255, -255, -255, -255, -255, -255, -255,
     -255, -255, -255, -255, -255, -255, -255, -255, -255, -255,
     -255, -255, -255, -255, -255, -255, -255, -255, -255, -255,

     -255, -255, -255, -255, -255, -255, -255, -255, -255, -255,
     -255, -255, -255, -255, -255, -255, -255
    },

    {
       13,  319,  320,  165,  165,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  321,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319
    },

    {
       13, -257,  257,  257,  257, -257, -257, -257, -257,  258,

     -257, -257, -257, -257, -257,  259, -257, -257, -257, -257,
     -257, -257, -257, -257, -257, -257, -257, -257, -257, -257,
     -257, -257, -257, -257, -257, -257, -257, -257, -257, -257,
     -257, -257, -257, -257, -257, -257, -257, -257, -257, -257,
     -257, -257, -257, -257, -257, -257, -257, -257, -257, -257,
     -257, -257, -257, -257, -257, -257, -257
    },

    {
       13, -258, -258, -258, -258, -258, -258, -258, -258, -258,
     -258, -258, -258, -258, -258, -258, -258, -258, -258, -258,
     -258, -258, -258, -258, -258, -258, -258, -258, -258, -258,
     -258, -258, -258, -258, -258, -258, -258, -258, -258, -258,

     -258, -258, -258, -258, -258, -258, -258, -258, -258, -258,
     -258, -258, -258, -258, -258, -258, -258, -258, -258, -258,
     -258, -258, -258, -258, -258, -258, -258
    },

    {
       13, -259, -259, -259, -259, -259, -259, -259, -259, -259,
     -259, -259, -259, -259, -259,  322, -259, -259, -259, -259,
     -259, -259, -259, -259, -259, -259, -259, -259, -259, -259,
     -259, -259, -259, -259, -259, -259, -259, -259, -259, -259,
     -259, -259, -259, -259, -259, -259, -259, -259, -259, -259,
     -259, -259, -259, -259, -259, -259, -259, -259, -259, -259,
     -259, -259, -259, -259, -259, -259, -259

    },

    {
       13,  323,  324,  176,  176,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  325,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323
    },

    {
       13, -261,  261,  261,  261, -261, -261, -261, -261,  262,
     -261, -261, -261, -261, -261,  263, -261, -261, -261, -261,
     -261, -261, -261, -261, -261, -261, -261, -261, -261, -261,

     -261, -261, -261, -261, -261, -261, -261, -261, -261, -261,
     -261, -261, -261, -261, -261, -261, -261, -261, -261, -261,
     -261, -261, -261, -261, -261, -261, -261, -261, -261, -261,
     -261, -261, -261, -261, -261, -261, -261
    },

    {
       13, -262, -262, -262, -262, -262, -262, -262, -262, -262,
     -262, -262, -262, -262, -262, -262, -262, -262, -262, -262,
     -262, -262, -262, -262, -262, -262, -262, -262, -262, -262,
     -262, -262, -262, -262, -262, -262, -262, -262, -262, -262,
     -262, -262, -262, -262, -262, -262, -262, -262, -262, -262,
     -262, -262, -262, -262, -262, -262, -262, -262, -262, -262,

     -262, -262, -262, -262, -262, -262, -262
    },

    {
       13, -263, -263, -263, -263, -263, -263, -263, -263, -263,
     -263, -263, -263, -263, -263,  326, -263, -263, -263, -263,
     -263, -263, -263, -263, -263, -263, -263, -263, -263, -263,
     -263, -263, -263, -263, -263, -263, -263, -263, -263, -263,
     -263, -263, -263, -263, -263, -263, -263, -263, -263, -263,
     -263, -263, -263, -263, -263, -263, -263, -263, -263, -263,
     -263, -263, -263, -263, -263, -263, -263
    },

    {
       13,  327,  328,  180,  180,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  329,  327,  327,  327,  327,

      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327
    },

    {
       13, -265, -265, -265, -265, -265, -265, -265, -265, -265,
     -265, -265, -265, -265, -265, -265, -265, -265, -265, -265,
     -265, -265, -265, -265, -265, -265, -265, -265, -265, -265,
     -265, -265, -265, -265, -265, -265, -265, -265, -265, -265,
     -265, -265, -265, -265, -265, -265, -265, -265, -265, -265,

     -265, -265, -265, -265, -265, -265,   98,   98,   98, -265,
     -265, -265, -265, -265, -265, -265, -265
    },

    {
       13, -266, -266, -266, -266, -266, -266, -266, -266, -266,
     -266, -266, -266, -266, -266, -266, -266, -266, -266, -266,
     -266, -266, -266, -266, -266, -266, -266, -266, -266, -266,
     -266, -266, -266, -266, -266, -266, -266, -266, -266, -266,
     -266, -266, -266, -266, -266, -266, -266, -266, -266, -266,
     -266, -266, -266, -266, -266, -266,   98,   98,   98, -266,
     -266, -266, -266, -266, -266, -266, -266
    },

    {
       13, -267, -267, -267, -267, -267, -267, -267, -267, -267,

     -267, -267, -267, -267, -267, -267, -267, -267, -267, -267,
     -267, -267, -267, -267, -267, -267, -267, -267, -267, -267,
     -267, -267, -267, -267, -267, -267, -267, -267, -267, -267,
     -267, -267, -267, -267, -267, -267, -267, -267, -267, -267,
     -267, -267, -267, -267, -267, -267,   98,   98,   98, -267,
     -267, -267, -267, -267, -267, -267, -267
    },

    {
       13, -268, -268, -268, -268, -268, -268, -268, -268, -268,
     -268, -268, -268, -268, -268, -268, -268, -268,   98, -268,
     -268, -268, -268, -268, -268, -268, -268,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,  330,   98,   98,   98,
       98,   98,   98,   98, -268, -268, -268, -268, -268,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -269, -269, -269, -269, -269, -269, -269, -269, -269,
     -269, -269, -269, -269, -269, -269, -269, -269,   98, -269,
     -269, -269, -269, -269, -269, -269, -269,   98,   98,   98,
       98,   98,  331,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -269, -269, -269, -269, -269,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -270, -270, -270, -270, -270, -270, -270, -270, -270,
     -270, -270, -270, -270, -270, -270, -270, -270,   98, -270,
     -270, -270, -270, -270, -270, -270, -270,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,  332,   98,
       98,   98,   98,   98, -270, -270, -270, -270, -270,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -271, -271, -271, -271, -271, -271, -271, -271, -271,
     -271, -271, -271, -271, -271, -271, -271, -271,   98, -271,
     -271, -271, -271, -271, -271, -271, -271,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  333,   98,   98,
       98,   98,   98,   98, -271, -271, -271, -271, -271,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -272, -272, -272, -272, -272, -272, -272, -272, -272,
     -272, -272, -272, -272, -272, -272, -272, -272,   98, -272,
     -272, -272, -272, -272, -272, -272, -272,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -272, -272, -272, -272, -272,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -273, -273, -273, -273, -273, -273, -273, -273, -273,
     -273, -273, -273, -273, -273, -273, -273, -273,   98, -273,
     -273, -273, -273, -273, -273, -273, -273,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  334,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -273, -273, -273, -273, -273,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -274, -274, -274, -274, -274, -274, -274, -274, -274,
     -274, -274, -274, -274, -274, -274, -274, -274,   98, -274,

     -274, -274, -274, -274, -274, -274, -274,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,  335,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -274, -274, -274, -274, -274,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -275, -275, -275, -275, -275, -275, -275, -275, -275,
     -275, -275, -275, -275, -275, -275, -275, -275,   98, -275,
     -275, -275, -275, -275, -275, -275, -275,   98,  336,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -275, -275, -275, -275, -275,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -276, -276, -276, -276, -276, -276, -276, -276, -276,
     -276, -276, -276, -276, -276, -276, -276, -276,   98, -276,
     -276, -276, -276, -276, -276, -276, -276,   98,   98,   98,
       98,   98,  337,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -276, -276, -276, -276, -276,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -277, -277, -277, -277, -277, -277, -277, -277, -277,

     -277, -277, -277, -277, -277, -277, -277, -277,   98, -277,
     -277, -277, -277, -277, -277, -277, -277,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -277, -277, -277, -277, -277,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -278, -278, -278, -278, -278, -278, -278, -278, -278,
     -278, -278, -278, -278, -278, -278, -278, -278,   98, -278,
     -278, -278, -278, -278, -278, -278, -278,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -278, -278, -278, -278, -278,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -279, -279, -279, -279, -279, -279, -279, -279, -279,
     -279, -279, -279, -279, -279, -279, -279, -279,   98, -279,
     -279, -279, -279, -279, -279, -279, -279,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,  338,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -279, -279, -279, -279, -279,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -280, -280, -280, -280, -280, -280, -280, -280, -280,
     -280, -280, -280, -280, -280, -280, -280, -280,   98, -280,
     -280, -280, -280, -280, -280, -280, -280,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  339,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -280, -280, -280, -280, -280,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -281, -281, -281, -281, -281, -281, -281, -281, -281,
     -281, -281, -281, -281, -281, -281, -281, -281,   98, -281,
     -281, -281, -281, -281, -281, -281, -281,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -281, -281, -281, -281, -281,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -282, -282, -282, -282, -282, -282, -282, -282, -282,
     -282, -282, -282, -282, -282, -282, -282, -282,   98, -282,
     -282, -282, -282, -282, -282, -282, -282,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  340,   98,   98,   98,   98,
       98,   98,   98,   98, -282, -282, -282, -282, -282,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -283, -283, -283, -283, -283, -283, -283, -283, -283,
     -283, -283, -283, -283, -283, -283, -283, -283,   98, -283,
     -283, -283, -283, -283, -283, -283, -283,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  341,   98,   98,   98,   98,
       98,   98,   98,   98, -283, -283, -283, -283, -283,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -284, -284, -284, -284, -284, -284, -284, -284, -284,
     -284, -284, -284, -284, -284, -284, -284, -284,   98, -284,

     -284, -284, -284, -284, -284, -284, -284,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  342,   98,   98,   98,   98,
       98,   98,   98,   98, -284, -284, -284, -284, -284,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -285, -285, -285, -285, -285, -285, -285, -285, -285,
     -285, -285, -285, -285, -285, -285, -285, -285,   98, -285,
     -285, -285, -285, -285, -285, -285, -285,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -285, -285, -285, -285, -285,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -286, -286, -286, -286, -286, -286, -286, -286, -286,
     -286, -286, -286, -286, -286, -286, -286, -286,   98, -286,
     -286, -286, -286, -286, -286, -286, -286,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  343,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -286, -286, -286, -286, -286,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -287, -287, -287, -287, -287, -287, -287, -287, -287,

     -287, -287, -287, -287, -287, -287, -287, -287,   98, -287,
     -287, -287, -287, -287, -287, -287, -287,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -287, -287, -287, -287, -287,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -288, -288, -288, -288, -288, -288, -288, -288, -288,
     -288, -288, -288, -288, -288, -288, -288, -288,   98, -288,
     -288, -288, -288, -288, -288, -288, -288,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  344,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -288, -288, -288, -288, -288,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -289, -289, -289, -289, -289, -289, -289, -289, -289,
     -289, -289, -289, -289, -289, -289, -289, -289,   98, -289,
     -289, -289, -289, -289, -289, -289, -289,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -289, -289, -289, -289, -289,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -290, -290, -290, -290, -290, -290, -290, -290, -290,
     -290, -290, -290, -290, -290, -290, -290, -290,   98, -290,
     -290, -290, -290, -290, -290, -290, -290,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -290, -290, -290, -290, -290,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -291, -291, -291, -291, -291, -291, -291, -291, -291,
     -291, -291, -291, -291, -291, -291, -291, -291,   98, -291,
     -291, -291, -291, -291, -291, -291, -291,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  345,   98,   98,
       98,   98,   98,   98, -291, -291, -291, -291, -291,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -292, -292, -292, -292, -292, -292, -292, -292, -292,
     -292, -292, -292, -292, -292, -292, -292, -292,   98, -292,
     -292, -292, -292, -292, -292, -292, -292,   98,   98,   98,
       98,   98,   98,   98,   98,  346,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -292, -292, -292, -292, -292,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -293, -293, -293, -293, -293, -293, -293, -293, -293,
     -293, -293, -293, -293, -293, -293, -293, -293,   98, -293,
     -293, -293, -293, -293, -293, -293, -293,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  347,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -293, -293, -293, -293, -293,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -294, -294, -294, -294, -294, -294, -294, -294, -294,
     -294, -294, -294, -294, -294, -294, -294, -294,   98, -294,

     -294, -294, -294, -294, -294, -294, -294,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  348,   98,   98,   98,   98,
       98,   98,   98,   98, -294, -294, -294, -294, -294,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -295, -295, -295, -295, -295, -295, -295, -295, -295,
     -295, -295, -295, -295, -295, -295, -295, -295,   98, -295,
     -295, -295, -295, -295, -295, -295, -295,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,  349,   98,

       98,   98,   98,   98, -295, -295, -295, -295, -295,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -296, -296, -296, -296, -296, -296, -296, -296, -296,
     -296, -296, -296, -296, -296, -296, -296, -296,   98, -296,
     -296, -296, -296, -296, -296, -296, -296,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -296, -296, -296, -296, -296,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -297, -297, -297, -297, -297, -297, -297, -297, -297,

     -297, -297, -297, -297, -297, -297, -297, -297,   98, -297,
     -297, -297, -297, -297, -297, -297, -297,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -297, -297, -297, -297, -297,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -298, -298, -298, -298, -298, -298, -298, -298, -298,
     -298, -298, -298, -298, -298, -298, -298, -298,   98, -298,
     -298, -298, -298, -298, -298, -298, -298,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,  350,   98,   98,   98,   98,
       98,   98,   98,   98, -298, -298, -298, -298, -298,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -299, -299, -299, -299, -299, -299, -299, -299, -299,
     -299, -299, -299, -299, -299, -299, -299, -299,   98, -299,
     -299, -299, -299, -299, -299, -299, -299,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  351,   98,   98,   98,   98,
       98,   98,   98,   98, -299, -299, -299, -299, -299,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -300, -300, -300, -300, -300, -300, -300, -300, -300,
     -300, -300, -300, -300, -300, -300, -300, -300,   98, -300,
     -300, -300, -300, -300, -300, -300, -300,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  352,   98,   98,
       98,   98,   98,   98, -300, -300, -300, -300, -300,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -301, -301, -301, -301, -301, -301, -301, -301, -301,
     -301, -301, -301, -301, -301, -301, -301, -301,   98, -301,
     -301, -301, -301, -301, -301, -301, -301,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  353,   98,   98,
       98,   98,   98,   98, -301, -301, -301, -301, -301,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -302, -302, -302, -302, -302, -302, -302, -302, -302,
     -302, -302, -302, -302, -302, -302, -302, -302,   98, -302,
     -302, -302, -302, -302, -302, -302, -302,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  354,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -302, -302, -302, -302, -302,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -303, -303, -303, -303, -303, -303, -303, -303, -303,
     -303, -303, -303, -303, -303, -303, -303, -303,   98, -303,
     -303, -303, -303, -303, -303, -303, -303,   98,   98,   98,
      355,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -303, -303, -303, -303, -303,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -304, -304, -304, -304, -304, -304, -304, -304, -304,
     -304, -304, -304, -304, -304, -304, -304, -304,   98, -304,

     -304, -304, -304, -304, -304, -304, -304,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  356,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -304, -304, -304, -304, -304,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -305, -305, -305, -305, -305, -305, -305, -305, -305,
     -305, -305, -305, -305, -305, -305, -305, -305,   98, -305,
     -305, -305, -305, -305, -305, -305, -305,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  357,   98,   98,

       98,   98,   98,   98, -305, -305, -305, -305, -305,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -306, -306, -306, -306, -306, -306, -306, -306, -306,
     -306, -306, -306, -306, -306, -306, -306, -306,   98, -306,
     -306, -306, -306, -306, -306, -306, -306,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  358,   98,   98,   98,
       98,   98,   98,  359, -306, -306, -306, -306, -306,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -307, -307, -307, -307, -307, -307, -307, -307, -307,

     -307, -307, -307, -307, -307, -307, -307, -307,   98, -307,
     -307, -307, -307, -307, -307, -307, -307,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  360,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -307, -307, -307, -307, -307,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -308, -308, -308, -308, -308, -308, -308, -308, -308,
     -308, -308, -308, -308, -308, -308, -308, -308,   98, -308,
     -308, -308, -308, -308, -308, -308, -308,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -308, -308, -308, -308, -308,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -309, -309, -309, -309, -309, -309, -309, -309, -309,
     -309, -309, -309, -309, -309, -309, -309, -309,   98, -309,
     -309, -309, -309, -309, -309, -309, -309,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -309, -309, -309, -309, -309,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -310, -310, -310, -310, -310, -310, -310, -310, -310,
     -310, -310, -310, -310, -310, -310, -310, -310,   98, -310,
     -310, -310, -310, -310, -310, -310, -310,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  361,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -310, -310, -310, -310, -310,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -311, -311, -311, -311, -311, -311, -311, -311, -311,
     -311, -311, -311, -311, -311, -311, -311, -311,   98, -311,
     -311, -311, -311, -311, -311, -311, -311,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  362,   98,   98,
       98,   98,   98,   98, -311, -311, -311, -311, -311,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -312, -312, -312, -312, -312, -312, -312, -312, -312,
     -312, -312, -312, -312, -312, -312, -312, -312,   98, -312,
     -312, -312, -312, -312, -312, -312, -312,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -312, -312, -312, -312, -312,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -313, -313, -313, -313, -313, -313, -313, -313, -313,
     -313, -313, -313, -313, -313, -313, -313, -313,   98, -313,
     -313, -313, -313, -313, -313, -313, -313,   98,   98,   98,
       98,   98,   98,   98,  363,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -313, -313, -313, -313, -313,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -314, -314, -314, -314, -314, -314, -314, -314, -314,
     -314, -314, -314, -314, -314, -314, -314, -314,   98, -314,

     -314, -314, -314, -314, -314, -314, -314,   98,   98,   98,
       98,   98,  364,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -314, -314, -314, -314, -314,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -315, -315, -315, -315, -315, -315, -315, -315, -315,
     -315, -315, -315, -315, -315, -315, -315, -315,   98, -315,
     -315, -315, -315, -315, -315, -315, -315,   98,   98,   98,
       98,   98,  365,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -315, -315, -315, -315, -315,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -316, -316, -316, -316, -316, -316, -316, -316, -316,
     -316, -316, -316, -316, -316, -316, -316, -316,   98, -316,
     -316, -316, -316, -316, -316, -316, -316,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -316, -316, -316, -316, -316,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -317, -317, -317, -317, -317, -317, -317, -317, -317,

     -317, -317, -317, -317, -317, -317, -317, -317,   98, -317,
     -317, -317, -317, -317, -317, -317, -317,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -317, -317, -317, -317, -317,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  366,  367,  253,  253,  366,  366,  366,  366,  368,
      366,  366,  366,  366,  366,  369,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,

      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366
    },

    {
       13,  319,  320,  165,  165,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  321,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319

    },

    {
       13,  319,  320,  165,  165,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  321,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319
    },

    {
       13,  319,  320,  165,  165,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  370,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,

      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319
    },

    {
       13,  371,  372,  257,  257,  371,  371,  371,  371,  373,
      371,  371,  371,  371,  371,  374,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,

      371,  371,  371,  371,  371,  371,  371
    },

    {
       13,  323,  324,  176,  176,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  325,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323
    },

    {
       13,  323,  324,  176,  176,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  325,  323,  323,  323,  323,

      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323
    },

    {
       13,  323,  324,  176,  176,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  375,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,

      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323
    },

    {
       13,  376,  377,  261,  261,  376,  376,  376,  376,  378,
      376,  376,  376,  376,  376,  379,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376
    },

    {
       13,  327,  328,  180,  180,  327,  327,  327,  327,  327,

      327,  327,  327,  327,  327,  329,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327
    },

    {
       13,  327,  328,  180,  180,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  329,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,

      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327
    },

    {
       13,  327,  328,  180,  180,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  380,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327

    },

    {
       13, -330, -330, -330, -330, -330, -330, -330, -330, -330,
     -330, -330, -330, -330, -330, -330, -330, -330,   98, -330,
     -330, -330, -330, -330, -330, -330, -330,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -330, -330, -330, -330, -330,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -331, -331, -331, -331, -331, -331, -331, -331, -331,
     -331, -331, -331, -331, -331, -331, -331, -331,   98, -331,
     -331, -331, -331, -331, -331, -331, -331,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  381,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -331, -331, -331, -331, -331,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -332, -332, -332, -332, -332, -332, -332, -332, -332,
     -332, -332, -332, -332, -332, -332, -332, -332,   98, -332,
     -332, -332, -332, -332, -332, -332, -332,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  382,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -332, -332, -332, -332, -332,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -333, -333, -333, -333, -333, -333, -333, -333, -333,
     -333, -333, -333, -333, -333, -333, -333, -333,   98, -333,
     -333, -333, -333, -333, -333, -333, -333,   98,   98,   98,
       98,   98,  383,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -333, -333, -333, -333, -333,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -334, -334, -334, -334, -334, -334, -334, -334, -334,
     -334, -334, -334, -334, -334, -334, -334, -334,   98, -334,

     -334, -334, -334, -334, -334, -334, -334,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  384,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -334, -334, -334, -334, -334,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -335, -335, -335, -335, -335, -335, -335, -335, -335,
     -335, -335, -335, -335, -335, -335, -335, -335,   98, -335,
     -335, -335, -335, -335, -335, -335, -335,   98,   98,   98,
       98,   98,  385,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -335, -335, -335, -335, -335,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -336, -336, -336, -336, -336, -336, -336, -336, -336,
     -336, -336, -336, -336, -336, -336, -336, -336,   98, -336,
     -336, -336, -336, -336, -336, -336, -336,   98,   98,   98,
      386,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -336, -336, -336, -336, -336,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -337, -337, -337, -337, -337, -337, -337, -337, -337,

     -337, -337, -337, -337, -337, -337, -337, -337,   98, -337,
     -337, -337, -337, -337, -337, -337, -337,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -337, -337, -337, -337, -337,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -338, -338, -338, -338, -338, -338, -338, -338, -338,
     -338, -338, -338, -338, -338, -338, -338, -338,   98, -338,
     -338, -338, -338, -338, -338, -338, -338,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -338, -338, -338, -338, -338,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -339, -339, -339, -339, -339, -339, -339, -339, -339,
     -339, -339, -339, -339, -339, -339, -339, -339,   98, -339,
     -339, -339, -339, -339, -339, -339, -339,   98,   98,   98,
       98,   98,   98,   98,  387,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -339, -339, -339, -339, -339,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -340, -340, -340, -340, -340, -340, -340, -340, -340,
     -340, -340, -340, -340, -340, -340, -340, -340,   98, -340,
     -340, -340, -340, -340, -340, -340, -340,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -340, -340, -340, -340, -340,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -341, -341, -341, -341, -341, -341, -341, -341, -341,
     -341, -341, -341, -341, -341, -341, -341, -341,   98, -341,
     -341, -341, -341, -341, -341, -341, -341,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  388,   98,   98,
       98,   98,   98,   98, -341, -341, -341, -341, -341,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -342, -342, -342, -342, -342, -342, -342, -342, -342,
     -342, -342, -342, -342, -342, -342, -342, -342,   98, -342,
     -342, -342, -342, -342, -342, -342, -342,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  389,
       98,   98,   98,   98, -342, -342, -342, -342, -342,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -343, -343, -343, -343, -343, -343, -343, -343, -343,
     -343, -343, -343, -343, -343, -343, -343, -343,   98, -343,
     -343, -343, -343, -343, -343, -343, -343,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  390,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -343, -343, -343, -343, -343,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -344, -344, -344, -344, -344, -344, -344, -344, -344,
     -344, -344, -344, -344, -344, -344, -344, -344,   98, -344,

     -344, -344, -344, -344, -344, -344, -344,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  391,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -344, -344, -344, -344, -344,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -345, -345, -345, -345, -345, -345, -345, -345, -345,
     -345, -345, -345, -345, -345, -345, -345, -345,   98, -345,
     -345, -345, -345, -345, -345, -345, -345,   98,   98,   98,
       98,   98,  392,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -345, -345, -345, -345, -345,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -346, -346, -346, -346, -346, -346, -346, -346, -346,
     -346, -346, -346, -346, -346, -346, -346, -346,   98, -346,
     -346, -346, -346, -346, -346, -346, -346,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -346, -346, -346, -346, -346,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -347, -347, -347, -347, -347, -347, -347, -347, -347,

     -347, -347, -347, -347, -347, -347, -347, -347,   98, -347,
     -347, -347, -347, -347, -347, -347, -347,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  393,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -347, -347, -347, -347, -347,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -348, -348, -348, -348, -348, -348, -348, -348, -348,
     -348, -348, -348, -348, -348, -348, -348, -348,   98, -348,
     -348, -348, -348, -348, -348, -348, -348,   98,  394,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -348, -348, -348, -348, -348,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -349, -349, -349, -349, -349, -349, -349, -349, -349,
     -349, -349, -349, -349, -349, -349, -349, -349,   98, -349,
     -349, -349, -349, -349, -349, -349, -349,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  395,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -349, -349, -349, -349, -349,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -350, -350, -350, -350, -350, -350, -350, -350, -350,
     -350, -350, -350, -350, -350, -350, -350, -350,   98, -350,
     -350, -350, -350, -350, -350, -350, -350,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -350, -350, -350, -350, -350,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -351, -351, -351, -351, -351, -351, -351, -351, -351,
     -351, -351, -351, -351, -351, -351, -351, -351,   98, -351,
     -351, -351, -351, -351, -351, -351, -351,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -351, -351, -351, -351, -351,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -352, -352, -352, -352, -352, -352, -352, -352, -352,
     -352, -352, -352, -352, -352, -352, -352, -352,   98, -352,
     -352, -352, -352, -352, -352, -352, -352,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  396,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -352, -352, -352, -352, -352,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -353, -353, -353, -353, -353, -353, -353, -353, -353,
     -353, -353, -353, -353, -353, -353, -353, -353,   98, -353,
     -353, -353, -353, -353, -353, -353, -353,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -353, -353, -353, -353, -353,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -354, -354, -354, -354, -354, -354, -354, -354, -354,
     -354, -354, -354, -354, -354, -354, -354, -354,   98, -354,

     -354, -354, -354, -354, -354, -354, -354,   98,   98,   98,
       98,  397,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -354, -354, -354, -354, -354,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -355, -355, -355, -355, -355, -355, -355, -355, -355,
     -355, -355, -355, -355, -355, -355, -355, -355,   98, -355,
     -355, -355, -355, -355, -355, -355, -355,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  398,   98,   98,

       98,   98,   98,   98, -355, -355, -355, -355, -355,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -356, -356, -356, -356, -356, -356, -356, -356, -356,
     -356, -356, -356, -356, -356, -356, -356, -356,   98, -356,
     -356, -356, -356, -356, -356, -356, -356,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  399,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -356, -356, -356, -356, -356,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -357, -357, -357, -357, -357, -357, -357, -357, -357,

     -357, -357, -357, -357, -357, -357, -357, -357,   98, -357,
     -357, -357, -357, -357, -357, -357, -357,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  400,   98,   98,   98,   98,
       98,   98,   98,   98, -357, -357, -357, -357, -357,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -358, -358, -358, -358, -358, -358, -358, -358, -358,
     -358, -358, -358, -358, -358, -358, -358, -358,   98, -358,
     -358, -358, -358, -358, -358, -358, -358,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,  401,   98,   98,
       98,   98,   98,   98, -358, -358, -358, -358, -358,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -359, -359, -359, -359, -359, -359, -359, -359, -359,
     -359, -359, -359, -359, -359, -359, -359, -359,   98, -359,
     -359, -359, -359, -359, -359, -359, -359,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  402,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -359, -359, -359, -359, -359,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -360, -360, -360, -360, -360, -360, -360, -360, -360,
     -360, -360, -360, -360, -360, -360, -360, -360,   98, -360,
     -360, -360, -360, -360, -360, -360, -360,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  403,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -360, -360, -360, -360, -360,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -361, -361, -361, -361, -361, -361, -361, -361, -361,
     -361, -361, -361, -361, -361, -361, -361, -361,   98, -361,
     -361, -361, -361, -361, -361, -361, -361,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -361, -361, -361, -361, -361,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -362, -362, -362, -362, -362, -362, -362, -362, -362,
     -362, -362, -362, -362, -362, -362, -362, -362,   98, -362,
     -362, -362, -362, -362, -362, -362, -362,   98,   98,   98,
       98,   98,  404,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -362, -362, -362, -362, -362,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -363, -363, -363, -363, -363, -363, -363, -363, -363,
     -363, -363, -363, -363, -363, -363, -363, -363,   98, -363,
     -363, -363, -363, -363, -363, -363, -363,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -363, -363, -363, -363, -363,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -364, -364, -364, -364, -364, -364, -364, -364, -364,
     -364, -364, -364, -364, -364, -364, -364, -364,   98, -364,

     -364, -364, -364, -364, -364, -364, -364,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  405,   98,   98,   98,
       98,   98,   98,   98, -364, -364, -364, -364, -364,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -365, -365, -365, -365, -365, -365, -365, -365, -365,
     -365, -365, -365, -365, -365, -365, -365, -365,   98, -365,
     -365, -365, -365, -365, -365, -365, -365,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -365, -365, -365, -365, -365,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  366,  367,  253,  253,  366,  366,  366,  366,  368,
      366,  366,  366,  366,  366,  369,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366
    },

    {
       13,  366,  367,  253,  253,  366,  366,  366,  366,  368,

      366,  366,  366,  366,  366,  369,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366
    },

    {
       13,  366,  367,  253,  253,  366,  366,  366,  366,  368,
      366,  366,  366,  366,  366,  369,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,

      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366
    },

    {
       13,  366,  367,  253,  253,  366,  366,  366,  366,  368,
      366,  366,  366,  366,  366,  406,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366

    },

    {
       13,  319,  320,  165,  165,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  370,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319
    },

    {
       13,  371,  372,  257,  257,  371,  371,  371,  371,  373,
      371,  371,  371,  371,  371,  374,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,

      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371
    },

    {
       13,  371,  372,  257,  257,  371,  371,  371,  371,  373,
      371,  371,  371,  371,  371,  374,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,

      371,  371,  371,  371,  371,  371,  371
    },

    {
       13,  371,  372,  257,  257,  371,  371,  371,  371,  373,
      371,  371,  371,  371,  371,  374,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371
    },

    {
       13,  371,  372,  257,  257,  371,  371,  371,  371,  373,
      371,  371,  371,  371,  371,  407,  371,  371,  371,  371,

      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371
    },

    {
       13,  323,  324,  176,  176,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  375,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,

      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323
    },

    {
       13,  376,  377,  261,  261,  376,  376,  376,  376,  378,
      376,  376,  376,  376,  376,  379,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376
    },

    {
       13,  376,  377,  261,  261,  376,  376,  376,  376,  378,

      376,  376,  376,  376,  376,  379,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376
    },

    {
       13,  376,  377,  261,  261,  376,  376,  376,  376,  378,
      376,  376,  376,  376,  376,  379,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,

      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376
    },

    {
       13,  376,  377,  261,  261,  376,  376,  376,  376,  378,
      376,  376,  376,  376,  376,  408,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376

    },

    {
       13,  327,  328,  180,  180,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  380,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327
    },

    {
       13, -381, -381, -381, -381, -381, -381, -381, -381, -381,
     -381, -381, -381, -381, -381, -381, -381, -381,   98, -381,
     -381, -381, -381, -381, -381, -381, -381,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  409,   98,   98,
       98,   98,   98,   98, -381, -381, -381, -381, -381,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -382, -382, -382, -382, -382, -382, -382, -382, -382,
     -382, -382, -382, -382, -382, -382, -382, -382,   98, -382,
     -382, -382, -382, -382, -382, -382, -382,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  410,   98,   98,
       98,   98,   98,   98, -382, -382, -382, -382, -382,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -383, -383, -383, -383, -383, -383, -383, -383, -383,
     -383, -383, -383, -383, -383, -383, -383, -383,   98, -383,
     -383, -383, -383, -383, -383, -383, -383,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -383, -383, -383, -383, -383,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -384, -384, -384, -384, -384, -384, -384, -384, -384,
     -384, -384, -384, -384, -384, -384, -384, -384,   98, -384,

     -384, -384, -384, -384, -384, -384, -384,   98,   98,   98,
      411,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -384, -384, -384, -384, -384,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -385, -385, -385, -385, -385, -385, -385, -385, -385,
     -385, -385, -385, -385, -385, -385, -385, -385,   98, -385,
     -385, -385, -385, -385, -385, -385, -385,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -385, -385, -385, -385, -385,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -386, -386, -386, -386, -386, -386, -386, -386, -386,
     -386, -386, -386, -386, -386, -386, -386, -386,   98, -386,
     -386, -386, -386, -386, -386, -386, -386,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  412,   98,   98,
       98,   98,   98,   98, -386, -386, -386, -386, -386,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -387, -387, -387, -387, -387, -387, -387, -387, -387,

     -387, -387, -387, -387, -387, -387, -387, -387,   98, -387,
     -387, -387, -387, -387, -387, -387, -387,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -387, -387, -387, -387, -387,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -388, -388, -388, -388, -388, -388, -388, -388, -388,
     -388, -388, -388, -388, -388, -388, -388, -388,   98, -388,
     -388, -388, -388, -388, -388, -388, -388,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -388, -388, -388, -388, -388,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -389, -389, -389, -389, -389, -389, -389, -389, -389,
     -389, -389, -389, -389, -389, -389, -389, -389,   98, -389,
     -389, -389, -389, -389, -389, -389, -389,   98,  413,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -389, -389, -389, -389, -389,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -390, -390, -390, -390, -390, -390, -390, -390, -390,
     -390, -390, -390, -390, -390, -390, -390, -390,   98, -390,
     -390, -390, -390, -390, -390, -390, -390,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -390, -390, -390, -390, -390,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -391, -391, -391, -391, -391, -391, -391, -391, -391,
     -391, -391, -391, -391, -391, -391, -391, -391,   98, -391,
     -391, -391, -391, -391, -391, -391, -391,   98,   98,   98,

       98,   98,   98,   98,  414,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -391, -391, -391, -391, -391,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -392, -392, -392, -392, -392, -392, -392, -392, -392,
     -392, -392, -392, -392, -392, -392, -392, -392,   98, -392,
     -392, -392, -392, -392, -392, -392, -392,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -392, -392, -392, -392, -392,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -393, -393, -393, -393, -393, -393, -393, -393, -393,
     -393, -393, -393, -393, -393, -393, -393, -393,   98, -393,
     -393, -393, -393, -393, -393, -393, -393,   98,  415,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -393, -393, -393, -393, -393,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -394, -394, -394, -394, -394, -394, -394, -394, -394,
     -394, -394, -394, -394, -394, -394, -394, -394,   98, -394,

     -394, -394, -394, -394, -394, -394, -394,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  416,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -394, -394, -394, -394, -394,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -395, -395, -395, -395, -395, -395, -395, -395, -395,
     -395, -395, -395, -395, -395, -395, -395, -395,   98, -395,
     -395, -395, -395, -395, -395, -395, -395,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  417,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -395, -395, -395, -395, -395,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -396, -396, -396, -396, -396, -396, -396, -396, -396,
     -396, -396, -396, -396, -396, -396, -396, -396,   98, -396,
     -396, -396, -396, -396, -396, -396, -396,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  418,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -396, -396, -396, -396, -396,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -397, -397, -397, -397, -397, -397, -397, -397, -397,

     -397, -397, -397, -397, -397, -397, -397, -397,   98, -397,
     -397, -397, -397, -397, -397, -397, -397,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -397, -397, -397, -397, -397,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -398, -398, -398, -398, -398, -398, -398, -398, -398,
     -398, -398, -398, -398, -398, -398, -398, -398,   98, -398,
     -398, -398, -398, -398, -398, -398, -398,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -398, -398, -398, -398, -398,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -399, -399, -399, -399, -399, -399, -399, -399, -399,
     -399, -399, -399, -399, -399, -399, -399, -399,   98, -399,
     -399, -399, -399, -399, -399, -399, -399,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  419,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -399, -399, -399, -399, -399,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -400, -400, -400, -400, -400, -400, -400, -400, -400,
     -400, -400, -400, -400, -400, -400, -400, -400,   98, -400,
     -400, -400, -400, -400, -400, -400, -400,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  420,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -400, -400, -400, -400, -400,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -401, -401, -401, -401, -401, -401, -401, -401, -401,
     -401, -401, -401, -401, -401, -401, -401, -401,   98, -401,
     -401, -401, -401, -401, -401, -401, -401,   98,  421,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -401, -401, -401, -401, -401,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -402, -402, -402, -402, -402, -402, -402, -402, -402,
     -402, -402, -402, -402, -402, -402, -402, -402,   98, -402,
     -402, -402, -402, -402, -402, -402, -402,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  422,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -402, -402, -402, -402, -402,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -403, -403, -403, -403, -403, -403, -403, -403, -403,
     -403, -403, -403, -403, -403, -403, -403, -403,   98, -403,
     -403, -403, -403, -403, -403, -403, -403,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  423,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -403, -403, -403, -403, -403,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -404, -404, -404, -404, -404, -404, -404, -404, -404,
     -404, -404, -404, -404, -404, -404, -404, -404,   98, -404,

     -404, -404, -404, -404, -404, -404, -404,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -404, -404, -404, -404, -404,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -405, -405, -405, -405, -405, -405, -405, -405, -405,
     -405, -405, -405, -405, -405, -405, -405, -405,   98, -405,
     -405, -405, -405, -405, -405, -405, -405,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -405, -405, -405, -405, -405,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13,  366,  367,  253,  253,  366,  366,  366,  366,  368,
      366,  366,  366,  366,  366,  406,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366
    },

    {
       13,  371,  372,  257,  257,  371,  371,  371,  371,  373,

      371,  371,  371,  371,  371,  407,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371
    },

    {
       13,  376,  377,  261,  261,  376,  376,  376,  376,  378,
      376,  376,  376,  376,  376,  408,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,

      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376
    },

    {
       13, -409, -409, -409, -409, -409, -409, -409, -409, -409,
     -409, -409, -409, -409, -409, -409, -409, -409,   98, -409,
     -409, -409, -409, -409, -409, -409, -409,  424,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -409, -409, -409, -409, -409,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -410, -410, -410, -410, -410, -410, -410, -410, -410,
     -410, -410, -410, -410, -410, -410, -410, -410,   98, -410,
     -410, -410, -410, -410, -410, -410, -410,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -410, -410, -410, -410, -410,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -411, -411, -411, -411, -411, -411, -411, -411, -411,
     -411, -411, -411, -411, -411, -411, -411, -411,   98, -411,
     -411, -411, -411, -411, -411, -411, -411,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  425,   98,   98,
       98,   98,   98,   98, -411, -411, -411, -411, -411,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -412, -412, -412, -412, -412, -412, -412, -412, -412,
     -412, -412, -412, -412, -412, -412, -412, -412,   98, -412,
     -412, -412, -412, -412, -412, -412, -412,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -412, -412, -412, -412, -412,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -413, -413, -413, -413, -413, -413, -413, -413, -413,
     -413, -413, -413, -413, -413, -413, -413, -413,   98, -413,
     -413, -413, -413, -413, -413, -413, -413,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  426,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -413, -413, -413, -413, -413,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -414, -414, -414, -414, -414, -414, -414, -414, -414,
     -414, -414, -414, -414, -414, -414, -414, -414,   98, -414,

     -414, -414, -414, -414, -414, -414, -414,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -414, -414, -414, -414, -414,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -415, -415, -415, -415, -415, -415, -415, -415, -415,
     -415, -415, -415, -415, -415, -415, -415, -415,   98, -415,
     -415, -415, -415, -415, -415, -415, -415,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,  427,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -415, -415, -415, -415, -415,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -416, -416, -416, -416, -416, -416, -416, -416, -416,
     -416, -416, -416, -416, -416, -416, -416, -416,   98, -416,
     -416, -416, -416, -416, -416, -416, -416,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -416, -416, -416, -416, -416,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -417, -417, -417, -417, -417, -417, -417, -417, -417,

     -417, -417, -417, -417, -417, -417, -417, -417,   98, -417,
     -417, -417, -417, -417, -417, -417, -417,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -417, -417, -417, -417, -417,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -418, -418, -418, -418, -418, -418, -418, -418, -418,
     -418, -418, -418, -418, -418, -418, -418, -418,   98, -418,
     -418, -418, -418, -418, -418, -418, -418,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,  428,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -418, -418, -418, -418, -418,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -419, -419, -419, -419, -419, -419, -419, -419, -419,
     -419, -419, -419, -419, -419, -419, -419, -419,   98, -419,
     -419, -419, -419, -419, -419, -419, -419,  429,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -419, -419, -419, -419, -419,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -420, -420, -420, -420, -420, -420, -420, -420, -420,
     -420, -420, -420, -420, -420, -420, -420, -420,   98, -420,
     -420, -420, -420, -420, -420, -420, -420,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  430,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -420, -420, -420, -420, -420,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -421, -421, -421, -421, -421, -421, -421, -421, -421,
     -421, -421, -421, -421, -421, -421, -421, -421,   98, -421,
     -421, -421, -421, -421, -421, -421, -421,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
      431,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -421, -421, -421, -421, -421,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -422, -422, -422, -422, -422, -422, -422, -422, -422,
     -422, -422, -422, -422, -422, -422, -422, -422,   98, -422,
     -422, -422, -422, -422, -422, -422, -422,   98,   98,   98,
       98,   98,  432,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -422, -422, -422, -422, -422,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -423, -423, -423, -423, -423, -423, -423, -423, -423,
     -423, -423, -423, -423, -423, -423, -423, -423,   98, -423,
     -423, -423, -423, -423, -423, -423, -423,   98,   98,   98,
       98,   98,   98,   98,  433,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -423, -423, -423, -423, -423,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -424, -424, -424, -424, -424, -424, -424, -424, -424,
     -424, -424, -424, -424, -424, -424, -424, -424,   98, -424,

     -424, -424, -424, -424, -424, -424, -424,   98,   98,   98,
       98,  434,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  435,  436,   98,
       98,   98,   98,   98, -424, -424, -424, -424, -424,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -425, -425, -425, -425, -425, -425, -425, -425, -425,
     -425, -425, -425, -425, -425, -425, -425, -425,   98, -425,
     -425, -425, -425, -425, -425, -425, -425,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -425, -425, -425, -425, -425,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -426, -426, -426, -426, -426, -426, -426, -426, -426,
     -426, -426, -426, -426, -426, -426, -426, -426,   98, -426,
     -426, -426, -426, -426, -426, -426, -426,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -426, -426, -426, -426, -426,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -427, -427, -427, -427, -427, -427, -427, -427, -427,

     -427, -427, -427, -427, -427, -427, -427, -427,   98, -427,
     -427, -427, -427, -427, -427, -427, -427,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -427, -427, -427, -427, -427,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -428, -428, -428, -428, -428, -428, -428, -428, -428,
     -428, -428, -428, -428, -428, -428, -428, -428,   98, -428,
     -428, -428, -428, -428, -428, -428, -428,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -428, -428, -428, -428, -428,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -429, -429, -429, -429, -429, -429, -429, -429, -429,
     -429, -429, -429, -429, -429, -429, -429, -429,   98, -429,
     -429, -429, -429, -429, -429, -429, -429,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,  437,   98,
       98,   98,   98,   98, -429, -429, -429, -429, -429,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -430, -430, -430, -430, -430, -430, -430, -430, -430,
     -430, -430, -430, -430, -430, -430, -430, -430,   98, -430,
     -430, -430, -430, -430, -430, -430, -430,   98,   98,   98,
       98,   98,   98,   98,  438,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -430, -430, -430, -430, -430,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -431, -431, -431, -431, -431, -431, -431, -431, -431,
     -431, -431, -431, -431, -431, -431, -431, -431,   98, -431,
     -431, -431, -431, -431, -431, -431, -431,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,  439,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -431, -431, -431, -431, -431,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -432, -432, -432, -432, -432, -432, -432, -432, -432,
     -432, -432, -432, -432, -432, -432, -432, -432,   98, -432,
     -432, -432, -432, -432, -432, -432, -432,  440,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -432, -432, -432, -432, -432,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -433, -433, -433, -433, -433, -433, -433, -433, -433,
     -433, -433, -433, -433, -433, -433, -433, -433,   98, -433,
     -433, -433, -433, -433, -433, -433, -433,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -433, -433, -433, -433, -433,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -434, -434, -434, -434, -434, -434, -434, -434, -434,
     -434, -434, -434, -434, -434, -434, -434, -434,   98, -434,

     -434, -434, -434, -434, -434, -434, -434,   98,  441,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -434, -434, -434, -434, -434,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -435, -435, -435, -435, -435, -435, -435, -435, -435,
     -435, -435, -435, -435, -435, -435, -435, -435,   98, -435,
     -435, -435, -435, -435, -435, -435, -435,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  442,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -435, -435, -435, -435, -435,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -436, -436, -436, -436, -436, -436, -436, -436, -436,
     -436, -436, -436, -436, -436, -436, -436, -436,   98, -436,
     -436, -436, -436, -436, -436, -436, -436,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  443,   98,   98,   98,
       98,   98,   98,   98, -436, -436, -436, -436, -436,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -437, -437, -437, -437, -437, -437, -437, -437, -437,

     -437, -437, -437, -437, -437, -437, -437, -437,   98, -437,
     -437, -437, -437, -437, -437, -437, -437,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  444,   98,   98,   98,
       98,   98,   98,   98, -437, -437, -437, -437, -437,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -438, -438, -438, -438, -438, -438, -438, -438, -438,
     -438, -438, -438, -438, -438, -438, -438, -438,   98, -438,
     -438, -438, -438, -438, -438, -438, -438,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -438, -438, -438, -438, -438,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -439, -439, -439, -439, -439, -439, -439, -439, -439,
     -439, -439, -439, -439, -439, -439, -439, -439,   98, -439,
     -439, -439, -439, -439, -439, -439, -439,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -439, -439, -439, -439, -439,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -440, -440, -440, -440, -440, -440, -440, -440, -440,
     -440, -440, -440, -440, -440, -440, -440, -440,   98, -440,
     -440, -440, -440, -440, -440, -440, -440,   98,   98,   98,
       98,   98,   98,   98,   98,  445,   98,   98,   98,   98,
      446,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -440, -440, -440, -440, -440,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -441, -441, -441, -441, -441, -441, -441, -441, -441,
     -441, -441, -441, -441, -441, -441, -441, -441,   98, -441,
     -441, -441, -441, -441, -441, -441, -441,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  447,   98,   98,
       98,   98,   98,   98, -441, -441, -441, -441, -441,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -442, -442, -442, -442, -442, -442, -442, -442, -442,
     -442, -442, -442, -442, -442, -442, -442, -442,   98, -442,
     -442, -442, -442, -442, -442, -442, -442,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
      448,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -442, -442, -442, -442, -442,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -443, -443, -443, -443, -443, -443, -443, -443, -443,
     -443, -443, -443, -443, -443, -443, -443, -443,   98, -443,
     -443, -443, -443, -443, -443, -443, -443,   98,   98,   98,
       98,   98,  449,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -443, -443, -443, -443, -443,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -444, -444, -444, -444, -444, -444, -444, -444, -444,
     -444, -444, -444, -444, -444, -444, -444, -444,   98, -444,

     -444, -444, -444, -444, -444, -444, -444,   98,   98,   98,
       98,   98,  450,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -444, -444, -444, -444, -444,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -445, -445, -445, -445, -445, -445, -445, -445, -445,
     -445, -445, -445, -445, -445, -445, -445, -445,   98, -445,
     -445, -445, -445, -445, -445, -445, -445,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,  451,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -445, -445, -445, -445, -445,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -446, -446, -446, -446, -446, -446, -446, -446, -446,
     -446, -446, -446, -446, -446, -446, -446, -446,   98, -446,
     -446, -446, -446, -446, -446, -446, -446,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  452,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -446, -446, -446, -446, -446,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -447, -447, -447, -447, -447, -447, -447, -447, -447,

     -447, -447, -447, -447, -447, -447, -447, -447,   98, -447,
     -447, -447, -447, -447, -447, -447, -447,   98,   98,   98,
       98,   98,  453,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -447, -447, -447, -447, -447,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -448, -448, -448, -448, -448, -448, -448, -448, -448,
     -448, -448, -448, -448, -448, -448, -448, -448,   98, -448,
     -448, -448, -448, -448, -448, -448, -448,   98,   98,   98,
       98,   98,  454,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -448, -448, -448, -448, -448,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -449, -449, -449, -449, -449, -449, -449, -449, -449,
     -449, -449, -449, -449, -449, -449, -449, -449,   98, -449,
     -449, -449, -449, -449, -449, -449, -449,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  455,   98,   98,   98,   98,
       98,   98,   98,   98, -449, -449, -449, -449, -449,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -450, -450, -450, -450, -450, -450, -450, -450, -450,
     -450, -450, -450, -450, -450, -450, -450, -450,   98, -450,
     -450, -450, -450, -450, -450, -450, -450,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  456,   98,   98,   98,   98,
       98,   98,   98,   98, -450, -450, -450, -450, -450,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -451, -451, -451, -451, -451, -451, -451, -451, -451,
     -451, -451, -451, -451, -451, -451, -451, -451,   98, -451,
     -451, -451, -451, -451, -451, -451, -451,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,  457,   98,
       98,   98,   98,   98, -451, -451, -451, -451, -451,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -452, -452, -452, -452, -452, -452, -452, -452, -452,
     -452, -452, -452, -452, -452, -452, -452, -452,   98, -452,
     -452, -452, -452, -452, -452, -452, -452,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,  458,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -452, -452, -452, -452, -452,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -453, -453, -453, -453, -453, -453, -453, -453, -453,
     -453, -453, -453, -453, -453, -453, -453, -453,   98, -453,
     -453, -453, -453, -453, -453, -453, -453,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -453, -453, -453, -453, -453,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -454, -454, -454, -454, -454, -454, -454, -454, -454,
     -454, -454, -454, -454, -454, -454, -454, -454,   98, -454,

     -454, -454, -454, -454, -454, -454, -454,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,  459,   98,   98,   98,
       98,   98,   98,   98, -454, -454, -454, -454, -454,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -455, -455, -455, -455, -455, -455, -455, -455, -455,
     -455, -455, -455, -455, -455, -455, -455, -455,   98, -455,
     -455, -455, -455, -455, -455, -455, -455,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -455, -455, -455, -455, -455,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -456, -456, -456, -456, -456, -456, -456, -456, -456,
     -456, -456, -456, -456, -456, -456, -456, -456,   98, -456,
     -456, -456, -456, -456, -456, -456, -456,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -456, -456, -456, -456, -456,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -457, -457, -457, -457, -457, -457, -457, -457, -457,

     -457, -457, -457, -457, -457, -457, -457, -457,   98, -457,
     -457, -457, -457, -457, -457, -457, -457,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,  460,   98,   98,   98,   98,
       98,   98,   98,   98, -457, -457, -457, -457, -457,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -458, -458, -458, -458, -458, -458, -458, -458, -458,
     -458, -458, -458, -458, -458, -458, -458, -458,   98, -458,
     -458, -458, -458, -458, -458, -458, -458,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,  461,   98,
       98,   98,   98,   98, -458, -458, -458, -458, -458,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -459, -459, -459, -459, -459, -459, -459, -459, -459,
     -459, -459, -459, -459, -459, -459, -459, -459,   98, -459,
     -459, -459, -459, -459, -459, -459, -459,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  462,   98,   98,
       98,   98,   98,   98, -459, -459, -459, -459, -459,   99,
      100,  101,  102,  103,  104,  105,  106

    },

    {
       13, -460, -460, -460, -460, -460, -460, -460, -460, -460,
     -460, -460, -460, -460, -460, -460, -460, -460,   98, -460,
     -460, -460, -460, -460, -460, -460, -460,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -460, -460, -460, -460, -460,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -461, -461, -461, -461, -461, -461, -461, -461, -461,
     -461, -461, -461, -461, -461, -461, -461, -461,   98, -461,
     -461, -461, -461, -461, -461, -461, -461,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,  463,   98,   98,
       98,   98,   98,   98, -461, -461, -461, -461, -461,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -462, -462, -462, -462, -462, -462, -462, -462, -462,
     -462, -462, -462, -462, -462, -462, -462, -462,   98, -462,
     -462, -462, -462, -462, -462, -462, -462,   98,  464,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -462, -462, -462, -462, -462,   99,

      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -463, -463, -463, -463, -463, -463, -463, -463, -463,
     -463, -463, -463, -463, -463, -463, -463, -463,   98, -463,
     -463, -463, -463, -463, -463, -463, -463,   98,   98,   98,
       98,   98,  465,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -463, -463, -463, -463, -463,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -464, -464, -464, -464, -464, -464, -464, -464, -464,
     -464, -464, -464, -464, -464, -464, -464, -464,   98, -464,

     -464, -464, -464, -464, -464, -464, -464,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
      466,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -464, -464, -464, -464, -464,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -465, -465, -465, -465, -465, -465, -465, -465, -465,
     -465, -465, -465, -465, -465, -465, -465, -465,   98, -465,
     -465, -465, -465, -465, -465, -465, -465,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98, -465, -465, -465, -465, -465,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -466, -466, -466, -466, -466, -466, -466, -466, -466,
     -466, -466, -466, -466, -466, -466, -466, -466,   98, -466,
     -466, -466, -466, -466, -466, -466, -466,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,  467,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -466, -466, -466, -466, -466,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    {
       13, -467, -467, -467, -467, -467, -467, -467, -467, -467,

     -467, -467, -467, -467, -467, -467, -467, -467,   98, -467,
     -467, -467, -467, -467, -467, -467, -467,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98, -467, -467, -467, -467, -467,   99,
      100,  101,  102,  103,  104,  105,  106
    },

    } ;

static yy_state_type yy_get_previous_state (void );
static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
static int yy_get_next_buffer (void );
static void yy_fatal_error (yyconst char msg[]  );

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up owwqltext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
	owwqlleng = (size_t) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
	(yy_c_buf_p) = yy_cp;

#define YY_NUM_RULES 127
#define YY_END_OF_BUFFER 128
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static yyconst flex_int16_t yy_accept[468] =
    {   0,
        0,    0,    9,    9,    0,    0,    0,    0,    0,    0,
        0,    0,  128,  126,    1,    1,   44,   20,   36,   46,
       14,   25,   26,   34,   32,   24,   33,   29,   35,  122,
       31,   30,   37,   41,   39,   27,   28,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,   47,   50,  126,  126,  126,  126,  126,  126,
      126,  126,    9,    7,    5,  127,  127,   23,   21,   23,
        8,   13,   17,   15,  127,   45,    1,  123,    2,  123,
      122,    0,   48,   38,   42,   40,   49,  125,    0,    0,

        0,    0,    0,    0,    0,    0,  125,  125,   53,   55,
        6,   56,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,   76,   81,  125,  125,
      125,  125,  125,  125,  125,  125,   95,   97,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
       12,  125,  125,   43,  125,    0,    0,    0,    0,    0,
        0,    0,    9,    0,    0,    0,    5,    0,    4,    3,
       23,   23,   22,    8,    0,    0,    0,   17,    0,    0,
       16,    0,   18,    1,  123,    0,  124,    0,    0,    0,
        0,    0,    0,    0,   51,   52,   54,  125,  125,   62,

      125,  125,  125,  125,  125,  125,  125,   70,  125,  125,
      125,  125,  125,  125,  125,  125,   82,  125,  125,  125,
      125,  125,  125,  125,  125,   92,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  105,  125,  125,  125,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,    0,
        0,    0,    0,   11,    0,    0,    0,   10,    0,    0,
        0,   19,    0,    0,    0,    0,    0,  125,  125,  125,
      125,   65,  125,  125,  125,  125,   71,   72,  125,  125,
       75,  125,  125,  125,   80,  125,   84,  125,   86,   87,
      125,  125,  125,  125,  125,   94,   96,  125,  125,  125,

      125,  125,  125,  125,  125,  107,  125,  112,  113,  125,
      125,  116,  125,  125,  125,  120,  121,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   57,
      125,  125,  125,  125,  125,  125,   69,   73,  125,   77,
      125,  125,  125,  125,  125,   89,  125,  125,  125,   98,
       99,  125,  101,  125,  125,  125,  125,  125,  125,  125,
      114,  125,  117,  125,  119,    0,    0,   11,    0,    0,
        0,    0,   10,    0,    0,    0,    0,   19,    0,    0,
      125,  125,   64,  125,   67,  125,   74,   78,  125,   83,
      125,   88,  125,  125,  125,  125,  102,  103,  125,  125,

      125,  125,  125,  115,  118,    0,    0,    0,  125,   63,
      125,   68,  125,   85,  125,   91,   93,  125,  125,  125,
      125,  125,  125,  125,   66,   79,   90,  100,  125,  125,
      125,  125,  111,  125,  125,  125,  125,  106,  108,  125,
      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      125,  125,   58,   59,   61,  104,  125,  125,  125,  109,
      125,  125,  125,  125,  110,  125,   60
    } ;

static yyconst flex_int32_t yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    2,    4,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    5,    6,    1,    1,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   18,   18,
       18,   18,   18,   18,   18,   18,   18,   19,   20,   21,
       22,   23,    1,    1,   28,   29,   30,   31,   32,   33,
       34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
       44,   45,   46,   47,   48,   49,   50,   51,   52,   53,
       24,   25,   26,    1,   27,    1,   28,   29,   30,   31,

       32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
       42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
       52,   53,    1,   54,    1,   55,    1,   56,   56,   56,
       56,   56,   56,   56,   56,   56,   56,   56,   56,   56,
       56,   56,   56,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,    1,    1,   59,   59,   59,   59,   59,   59,   59,

       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   60,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   62,   63,   63,   64,
       65,   65,   65,   66,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

extern int owwql_flex_debug;
int owwql_flex_debug = 0;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
char *owwqltext;
#line 1 "OW_WQLLexer.ll"
#line 4 "OW_WQLLexer.ll"
/*-------------------------------------------------------------------------
 *
 * scan.l
 *	  lexical scanner for OpenWBEM WQL
 *
 * Portions Copyright (c) 1996-2001, PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 *-------------------------------------------------------------------------
 */
/*******************************************************************************
* Copyright (C) 2001 Vintela, Inc. All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  - Redistributions of source code must retain the above copyright notice,
*    this list of conditions and the following disclaimer.
*
*  - Redistributions in binary form must reproduce the above copyright notice,
*    this list of conditions and the following disclaimer in the documentation
*    and/or other materials provided with the distribution.
*
*  - Neither the name of Vintela, Inc. nor the names of its
*    contributors may be used to endorse or promote products derived from this
*    software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS''
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL Vintela, Inc. OR THE CONTRIBUTORS
* BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*******************************************************************************/

/**
 * @author Dan Nuffer
 */

#include "OW_WQLAst.hpp"
#include "OW_WQLImpl.hpp"
#include "OW_StringBuffer.hpp"
#include "OW_Format.hpp"
#include "OW_CIMException.hpp"

#include <string.h>
#include <errno.h>
#include <ctype.h>

// this has to be before OW_WQLParser.h is included.
using namespace OpenWBEM;
#include "OW_WQLParser.h"

static const char *parseCh;

/* set up my input handler --- need one flavor for flex, one for lex */
#if defined(FLEX_SCANNER)

#define YY_NEVER_INTERACTIVE 1
#define YY_NO_UNPUT
static int myinput(char* buf, int max);
#undef YY_INPUT
#define YY_INPUT(buf,result,max) {result = myinput(buf,max);}

/* No reason to constrain amount of data slurped per myinput() call. */
#define YY_READ_BUF_SIZE 16777216

/* Avoid exit() on fatal scanner errors (a bit ugly -- see yy_fatal_error) */
#define YY_FATAL_ERROR(msg) \
		OW_THROWCIMMSG( CIMException::INVALID_QUERY, \
			Format("Fatal Parser Error: %1", msg).c_str())

#define YY_DECL extern "C" int owwqllex()        /* return the next token */ 
#else /* !FLEX_SCANNER */

#undef input
int input();
#undef unput
void unput(char);

#endif /* FLEX_SCANNER */

extern YYSTYPE owwqllval;


static int		xcdepth = 0;	/* depth of nesting in slash-star comments */

static StringBuffer strbuffer;

#define RETURN_VAL(x) owwqllval.pstring = 0; return(x);
#define RETURN_STR(x) owwqllval.pstring = new String(owwqltext); return(x);
#define RETURN_BUFF_VAL(x) owwqllval.pstring = new String(strbuffer.c_str()); return(x);

/*
 * OK, here is a short description of lex/flex rules behavior.
 * The longest pattern which matches an input string is always chosen.
 * For equal-length patterns, the first occurring in the rules list is chosen.
 * INITIAL is the starting state, to which all non-conditional rules apply.
 * Exclusive states change parsing rules while the state is active.  When in
 * an exclusive state, only those rules defined for that state apply.
 *
 * We use exclusive states for quoted strings, extended comments,
 * and to eliminate parsing troubles for numeric strings.
 * Exclusive states:
 *  <xbit> bit string literal
 *  <xc> extended C-style comments - thomas 1997-07-12
 *  <xd> delimited identifiers (double-quoted identifiers) - thomas 1997-10-27
 *  <xh> hexadecimal numeric string - thomas 1997-11-16
 *  <xq> quoted strings - thomas 1997-07-30
 */





/* Bit string
 */
/* Hexadecimal number
 */
/* Extended quote
 * xqdouble implements SQL92 embedded quote
 * xqcat allows strings to cross input lines
 * Note: reduction of '' and \ sequences to output text is done in scanstr(),
 * not by rules here.  But we do get rid of xqcat sequences here.
 */
/* Delimited quote
 * Allows embedded spaces and other special characters into identifiers.
 */
/* C-style comments */
/* UTF-8 (from Unicode 4.0.0 standard):
Table 3-6. Well-Formed UTF-8 Byte Sequences Code Points 
                   1st Byte 2nd Byte 3rd Byte 4th Byte 
U+0000..U+007F     00..7F 
U+0080..U+07FF     C2..DF   80..BF 
U+0800..U+0FFF     E0       A0..BF   80..BF 
U+1000..U+CFFF     E1..EC   80..BF   80..BF 
U+D000..U+D7FF     ED       80..9F   80..BF 
U+E000..U+FFFF     EE..EF   80..BF   80..BF 
U+10000..U+3FFFF   F0       90..BF   80..BF   80..BF 
U+40000..U+FFFFF   F1..F3   80..BF   80..BF   80..BF 
U+100000..U+10FFFF F4       80..8F   80..BF   80..BF
*/
/*
 * "self" is the set of chars that should be returned as single-character
 * tokens.  "op_chars" is the set of chars that can make up "Op" tokens,
 * which can be one or more characters long (but if a single-char token
 * appears in the "self" set, it is not to be returned as an Op).  Note
 * that the sets overlap, but each has some chars that are not in the other.
 *
 * If you change either set, adjust the character lists appearing in the
 * rule for "operator"!
self			[,()\[\].;$\:\+\-\*\/\%\^\<\>\=]
op_chars		[\~\!\@\#\^\&\|\`\?\$\+\-\*\/\%\<\>\=]
operator		{op_chars}+
 */
/* we no longer allow unary minus in numbers.
 * instead we pass it separately to parser. there it gets
 * coerced via doNegate() -- Leon aug 20 1999
 */
/*
 * In order to make the world safe for Windows and Mac clients as well as
 * Unix ones, we accept either \n or \r as a newline.  A DOS-style \r\n
 * sequence will be seen as two successive newlines, but that doesn't cause
 * any problems.  SQL92-style comments, which start with -- and extend to the
 * next newline, are treated as equivalent to a single whitespace character.
 *
 * NOTE a fine point: if there is no newline following --, we will absorb
 * everything to the end of the input as a comment.  This is correct.  Older
 * versions of Postgres failed to recognize -- as a comment if the input
 * did not end with a newline.
 *
 * XXX perhaps \f (formfeed) should be treated as a newline as well?
 */
/*
 * SQL92 requires at least one newline in the whitespace separating
 * string literals that are to be concatenated.  Silly, but who are we
 * to argue?  Note that {whitespace_with_newline} should not have * after
 * it, whereas {whitespace} should generally have a * after it...
 */
/* DO NOT PUT ANY COMMENTS IN THE FOLLOWING SECTION.
 * AT&T lex does not properly handle C-style comments in this second lex block.
 * So, put comments here. thomas - 1997-09-08
 *
 * Quoted strings must allow some special characters such as single-quote
 *  and newline.
 * Embedded single-quotes are implemented both in the SQL92-standard
 *  style of two adjacent single quotes "''" and in the Postgres/Java style
 *  of escaped-quote "\'".
 * Other embedded escaped characters are matched explicitly and the leading
 *  backslash is dropped from the string. - thomas 1997-09-24
 * Note that xcstart must appear before operator, as explained above!
 *  Also whitespace (comment) must appear before operator.
 */
#line 5681 "OW_WQLLexer.cc"

#define INITIAL 0
#define xbit 1
#define xc 2
#define xd 3
#define xh 4
#define xq 5

/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#include <unistd.h>

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int owwqlwrap (void );
#else
extern int owwqlwrap (void );
#endif
#endif

    static void yyunput (int c,char *buf_ptr  );
    
#ifndef yytext_ptr
static void yy_flex_strncpy (char *,yyconst char *,int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * );
#endif

#ifndef YY_NO_INPUT

#ifdef __cplusplus
static int yyinput (void );
#else
static int input (void );
#endif

#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO (void) fwrite( owwqltext, owwqlleng, 1, owwqlout )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
		{ \
		int c = '*'; \
		size_t n; \
		for ( n = 0; n < max_size && \
			     (c = getc( owwqlin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( owwqlin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else \
		{ \
		errno=0; \
		while ( (result = fread(buf, 1, max_size, owwqlin))==0 && ferror(owwqlin)) \
			{ \
			if( errno != EINTR) \
				{ \
				YY_FATAL_ERROR( "input in flex scanner failed" ); \
				break; \
				} \
			errno=0; \
			clearerr(owwqlin); \
			} \
		}\
\

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1

extern int owwqllex (void);

#define YY_DECL int owwqllex (void)
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after owwqltext and owwqlleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;
    
#line 277 "OW_WQLLexer.ll"

#line 5837 "OW_WQLLexer.cc"

	if ( (yy_init) )
		{
		(yy_init) = 0;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! owwqlin )
			owwqlin = stdin;

		if ( ! owwqlout )
			owwqlout = stdout;

		if ( ! YY_CURRENT_BUFFER ) {
			owwqlensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				owwql_create_buffer(owwqlin,YY_BUF_SIZE );
		}

		owwql_load_buffer_state( );
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = (yy_c_buf_p);

		/* Support of owwqltext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = (yy_start);
yy_match:
		while ( (yy_current_state = yy_nxt[yy_current_state][ yy_ec[YY_SC_TO_UI(*yy_cp)]  ]) > 0 )
			{
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}

			++yy_cp;
			}

		yy_current_state = -yy_current_state;

yy_find_action:
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos) + 1;
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
/* rule 1 can match eol */
YY_RULE_SETUP
#line 278 "OW_WQLLexer.ll"
{ /* ignore */ }
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 280 "OW_WQLLexer.ll"
{
					xcdepth = 0;
					BEGIN(xc);
				}
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 285 "OW_WQLLexer.ll"
{
					xcdepth++;
				}
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 289 "OW_WQLLexer.ll"
{
					if (xcdepth <= 0)
						BEGIN(INITIAL);
					else
						xcdepth--;
				}
	YY_BREAK
case 5:
/* rule 5 can match eol */
YY_RULE_SETUP
#line 296 "OW_WQLLexer.ll"
{ /* ignore */ }
	YY_BREAK
case YY_STATE_EOF(xc):
#line 298 "OW_WQLLexer.ll"
{ OW_THROWCIMMSG(CIMException::INVALID_QUERY, "Unterminated /* comment"); }
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 300 "OW_WQLLexer.ll"
{
					BEGIN(xbit);
					strbuffer.reset();
					//strbuffer += "b";
				}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 306 "OW_WQLLexer.ll"
{
					BEGIN(INITIAL);
					const char* buf = strbuffer.c_str();
					if (buf[strspn(buf, "01") + 1] != '\0')
						OW_THROWCIMMSG(CIMException::INVALID_QUERY, Format( "invalid bit string input: '%1'",
							 buf).c_str());
					RETURN_BUFF_VAL(BITCONST);
				}
	YY_BREAK
case 8:
/* rule 8 can match eol */
#line 316 "OW_WQLLexer.ll"
case 9:
/* rule 9 can match eol */
YY_RULE_SETUP
#line 316 "OW_WQLLexer.ll"
{
					strbuffer.append(owwqltext, owwqlleng);
				}
	YY_BREAK
case 10:
/* rule 10 can match eol */
#line 321 "OW_WQLLexer.ll"
case 11:
/* rule 11 can match eol */
YY_RULE_SETUP
#line 321 "OW_WQLLexer.ll"
{ /* ignore */ }
	YY_BREAK
case YY_STATE_EOF(xbit):
#line 323 "OW_WQLLexer.ll"
{ OW_THROWCIMMSG( CIMException::INVALID_QUERY, "unterminated bit string literal" ); }
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 325 "OW_WQLLexer.ll"
{
					BEGIN(xh);
					strbuffer.reset();
				}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 330 "OW_WQLLexer.ll"
{
					long val;
					char* endptr;

					BEGIN(INITIAL);
					const char* literalbuf = strbuffer.c_str();
					errno = 0;
					val = strtol(literalbuf, &endptr, 16);
					if (*endptr != '\0' || errno == ERANGE)
						OW_THROWCIMMSG( CIMException::INVALID_QUERY, Format( "Bad hexadecimal integer input '%1'",
							 literalbuf).c_str() );
					RETURN_BUFF_VAL( HEXCONST );
				}
	YY_BREAK
case YY_STATE_EOF(xh):
#line 344 "OW_WQLLexer.ll"
{ OW_THROWCIMMSG( CIMException::INVALID_QUERY, "Unterminated hexadecimal integer"); }
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 346 "OW_WQLLexer.ll"
{
					BEGIN(xq);
					strbuffer.reset();
				}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 351 "OW_WQLLexer.ll"
{
					BEGIN(INITIAL);
					RETURN_BUFF_VAL(SCONST);
				}
	YY_BREAK
case 16:
#line 357 "OW_WQLLexer.ll"
case 17:
/* rule 17 can match eol */
#line 358 "OW_WQLLexer.ll"
case 18:
/* rule 18 can match eol */
YY_RULE_SETUP
#line 358 "OW_WQLLexer.ll"
{
					strbuffer.append(owwqltext, owwqlleng);
				}
	YY_BREAK
case 19:
/* rule 19 can match eol */
YY_RULE_SETUP
#line 362 "OW_WQLLexer.ll"
{ /* ignore */ }
	YY_BREAK
case YY_STATE_EOF(xq):
#line 364 "OW_WQLLexer.ll"
{ OW_THROWCIMMSG( CIMException::INVALID_QUERY, "Unterminated quoted string"); }
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 367 "OW_WQLLexer.ll"
{
					BEGIN(xd);
					strbuffer.reset();
				}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 372 "OW_WQLLexer.ll"
{
					BEGIN(INITIAL);
//					if (strbuffer.length() == 0)
//						OW_THROWCIMMSG( CIMException::INVALID_QUERY, "zero-length delimited identifier");
					RETURN_BUFF_VAL(SCONST);
				}
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 379 "OW_WQLLexer.ll"
{
					strbuffer.append(owwqltext, owwqlleng-1);
				}
	YY_BREAK
case 23:
/* rule 23 can match eol */
YY_RULE_SETUP
#line 383 "OW_WQLLexer.ll"
{
					strbuffer.append(owwqltext, owwqlleng);
				}
	YY_BREAK
case YY_STATE_EOF(xd):
#line 387 "OW_WQLLexer.ll"
{ OW_THROWCIMMSG( CIMException::INVALID_QUERY, "Unterminated quoted identifier"); }
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 390 "OW_WQLLexer.ll"
{ RETURN_VAL(COMMA); }
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 391 "OW_WQLLexer.ll"
{ RETURN_VAL(LEFTPAREN); }
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 392 "OW_WQLLexer.ll"
{ RETURN_VAL(RIGHTPAREN); }
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 393 "OW_WQLLexer.ll"
{ RETURN_VAL(LEFTBRACKET); }
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 394 "OW_WQLLexer.ll"
{ RETURN_VAL(RIGHTBRACKET); }
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 395 "OW_WQLLexer.ll"
{ RETURN_VAL(PERIOD); }
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 396 "OW_WQLLexer.ll"
{ RETURN_VAL(SEMICOLON); }
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 397 "OW_WQLLexer.ll"
{ RETURN_VAL(COLON); }
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 398 "OW_WQLLexer.ll"
{ RETURN_VAL(PLUS); }
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 399 "OW_WQLLexer.ll"
{ RETURN_VAL(MINUS); }
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 400 "OW_WQLLexer.ll"
{ RETURN_VAL(ASTERISK); }
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 401 "OW_WQLLexer.ll"
{ RETURN_VAL(SOLIDUS); }
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 402 "OW_WQLLexer.ll"
{ RETURN_VAL(PERCENT); }
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 403 "OW_WQLLexer.ll"
{ RETURN_VAL(LESSTHAN); }
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 404 "OW_WQLLexer.ll"
{ RETURN_VAL(LESSTHANOREQUALS); }
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 405 "OW_WQLLexer.ll"
{ RETURN_VAL(GREATERTHAN); }
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 406 "OW_WQLLexer.ll"
{ RETURN_VAL(GREATERTHANOREQUALS); }
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 407 "OW_WQLLexer.ll"
{ RETURN_VAL(EQUALS); }
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 408 "OW_WQLLexer.ll"
{ RETURN_VAL(NOTEQUALS); }
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 409 "OW_WQLLexer.ll"
{ RETURN_VAL(CONCATENATION); }
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 410 "OW_WQLLexer.ll"
{ RETURN_VAL(NOT); }
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 411 "OW_WQLLexer.ll"
{ RETURN_VAL(AND); }
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 412 "OW_WQLLexer.ll"
{ RETURN_VAL(BITAND); }
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 413 "OW_WQLLexer.ll"
{ RETURN_VAL(BITOR); }
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 414 "OW_WQLLexer.ll"
{ RETURN_VAL(BITSHIFTLEFT); }
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 415 "OW_WQLLexer.ll"
{ RETURN_VAL(BITSHIFTRIGHT); }
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 416 "OW_WQLLexer.ll"
{ RETURN_VAL(BITINVERT); }
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 418 "OW_WQLLexer.ll"
{ RETURN_VAL(ALL); }
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 419 "OW_WQLLexer.ll"
{ RETURN_VAL(AND); }
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 420 "OW_WQLLexer.ll"
{ RETURN_VAL(AS); }
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 421 "OW_WQLLexer.ll"
{ RETURN_VAL(ASC); }
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 422 "OW_WQLLexer.ll"
{ RETURN_VAL(AT); }
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 423 "OW_WQLLexer.ll"
{ RETURN_VAL(BY); }
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 424 "OW_WQLLexer.ll"
{ RETURN_VAL(CROSS); }
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 425 "OW_WQLLexer.ll"
{ RETURN_VAL(CURRENTDATE); }
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 426 "OW_WQLLexer.ll"
{ RETURN_VAL(CURRENTTIME); }
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 427 "OW_WQLLexer.ll"
{ RETURN_VAL(CURRENTTIMESTAMP); }
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 428 "OW_WQLLexer.ll"
{ RETURN_VAL(CURRENTUSER); }
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 429 "OW_WQLLexer.ll"
{ RETURN_VAL(DAYP); }
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 430 "OW_WQLLexer.ll"
{ RETURN_VAL(DEFAULT); }
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 431 "OW_WQLLexer.ll"
{ RETURN_VAL(DELETE); }
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 432 "OW_WQLLexer.ll"
{ RETURN_VAL(DESC); }
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 433 "OW_WQLLexer.ll"
{ RETURN_VAL(DISTINCT); }
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 434 "OW_WQLLexer.ll"
{ RETURN_VAL(ESCAPE); }
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 435 "OW_WQLLexer.ll"
{ RETURN_VAL(EXTRACT); }
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 436 "OW_WQLLexer.ll"
{ RETURN_VAL(FALSEP); }
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 437 "OW_WQLLexer.ll"
{ RETURN_VAL(FOR); }
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 438 "OW_WQLLexer.ll"
{ RETURN_VAL(FROM); }
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 439 "OW_WQLLexer.ll"
{ RETURN_VAL(FULL); }
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 440 "OW_WQLLexer.ll"
{ RETURN_VAL(GROUP); }
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 441 "OW_WQLLexer.ll"
{ RETURN_VAL(HAVING); }
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 442 "OW_WQLLexer.ll"
{ RETURN_VAL(HOURP); }
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 443 "OW_WQLLexer.ll"
{ RETURN_VAL(IN); }
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 444 "OW_WQLLexer.ll"
{ RETURN_VAL(INNERP); }
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 445 "OW_WQLLexer.ll"
{ RETURN_VAL(INSERT); }
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 446 "OW_WQLLexer.ll"
{ RETURN_VAL(INTERVAL); }
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 447 "OW_WQLLexer.ll"
{ RETURN_VAL(INTO); }
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 448 "OW_WQLLexer.ll"
{ RETURN_VAL(IS); }
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 449 "OW_WQLLexer.ll"
{ RETURN_VAL(ISA); }
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 450 "OW_WQLLexer.ll"
{ RETURN_VAL(ISNULL); }
	YY_BREAK
case 84:
YY_RULE_SETUP
#line 451 "OW_WQLLexer.ll"
{ RETURN_VAL(JOIN); }
	YY_BREAK
case 85:
YY_RULE_SETUP
#line 452 "OW_WQLLexer.ll"
{ RETURN_VAL(LEADING); }
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 453 "OW_WQLLexer.ll"
{ RETURN_VAL(LEFT); }
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 454 "OW_WQLLexer.ll"
{ RETURN_VAL(LIKE); }
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 455 "OW_WQLLexer.ll"
{ RETURN_VAL(MINUTEP); }
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 456 "OW_WQLLexer.ll"
{ RETURN_VAL(MONTHP); }
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 457 "OW_WQLLexer.ll"
{ RETURN_VAL(NATIONAL); }
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 458 "OW_WQLLexer.ll"
{ RETURN_VAL(NATURAL); }
	YY_BREAK
case 92:
YY_RULE_SETUP
#line 459 "OW_WQLLexer.ll"
{ RETURN_VAL(NOT); }
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 460 "OW_WQLLexer.ll"
{ RETURN_VAL(NOTNULL); }
	YY_BREAK
case 94:
YY_RULE_SETUP
#line 461 "OW_WQLLexer.ll"
{ RETURN_VAL(NULLP); }
	YY_BREAK
case 95:
YY_RULE_SETUP
#line 462 "OW_WQLLexer.ll"
{ RETURN_VAL(ON); }
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 463 "OW_WQLLexer.ll"
{ RETURN_VAL(ONLY); }
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 464 "OW_WQLLexer.ll"
{ RETURN_VAL(OR); }
	YY_BREAK
case 98:
YY_RULE_SETUP
#line 465 "OW_WQLLexer.ll"
{ RETURN_VAL(ORDER); }
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 466 "OW_WQLLexer.ll"
{ RETURN_VAL(OUTERP); }
	YY_BREAK
case 100:
YY_RULE_SETUP
#line 467 "OW_WQLLexer.ll"
{ RETURN_VAL(POSITION); }
	YY_BREAK
case 101:
YY_RULE_SETUP
#line 468 "OW_WQLLexer.ll"
{ RETURN_VAL(RIGHT); }
	YY_BREAK
case 102:
YY_RULE_SETUP
#line 469 "OW_WQLLexer.ll"
{ RETURN_VAL(SECONDP); }
	YY_BREAK
case 103:
YY_RULE_SETUP
#line 470 "OW_WQLLexer.ll"
{ RETURN_VAL(SELECT); }
	YY_BREAK
case 104:
YY_RULE_SETUP
#line 471 "OW_WQLLexer.ll"
{ RETURN_VAL(SESSIONUSER); }
	YY_BREAK
case 105:
YY_RULE_SETUP
#line 472 "OW_WQLLexer.ll"
{ RETURN_VAL(SET); }
	YY_BREAK
case 106:
YY_RULE_SETUP
#line 473 "OW_WQLLexer.ll"
{ RETURN_VAL(SUBSTRING); }
	YY_BREAK
case 107:
YY_RULE_SETUP
#line 474 "OW_WQLLexer.ll"
{ RETURN_VAL(TIME); }
	YY_BREAK
case 108:
YY_RULE_SETUP
#line 475 "OW_WQLLexer.ll"
{ RETURN_VAL(TIMESTAMP); }
	YY_BREAK
case 109:
YY_RULE_SETUP
#line 476 "OW_WQLLexer.ll"
{ RETURN_VAL(TIMEZONEHOUR); }
	YY_BREAK
case 110:
YY_RULE_SETUP
#line 477 "OW_WQLLexer.ll"
{ RETURN_VAL(TIMEZONEMINUTE); }
	YY_BREAK
case 111:
YY_RULE_SETUP
#line 478 "OW_WQLLexer.ll"
{ RETURN_VAL(TRAILING); }
	YY_BREAK
case 112:
YY_RULE_SETUP
#line 479 "OW_WQLLexer.ll"
{ RETURN_VAL(TRIM); }
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 480 "OW_WQLLexer.ll"
{ RETURN_VAL(TRUEP); }
	YY_BREAK
case 114:
YY_RULE_SETUP
#line 481 "OW_WQLLexer.ll"
{ RETURN_VAL(UNION); }
	YY_BREAK
case 115:
YY_RULE_SETUP
#line 482 "OW_WQLLexer.ll"
{ RETURN_VAL(UPDATE); }
	YY_BREAK
case 116:
YY_RULE_SETUP
#line 483 "OW_WQLLexer.ll"
{ RETURN_VAL(USER); }
	YY_BREAK
case 117:
YY_RULE_SETUP
#line 484 "OW_WQLLexer.ll"
{ RETURN_VAL(USING); }
	YY_BREAK
case 118:
YY_RULE_SETUP
#line 485 "OW_WQLLexer.ll"
{ RETURN_VAL(VALUES); }
	YY_BREAK
case 119:
YY_RULE_SETUP
#line 486 "OW_WQLLexer.ll"
{ RETURN_VAL(WHERE); }
	YY_BREAK
case 120:
YY_RULE_SETUP
#line 487 "OW_WQLLexer.ll"
{ RETURN_VAL(YEARP); }
	YY_BREAK
case 121:
YY_RULE_SETUP
#line 488 "OW_WQLLexer.ll"
{ RETURN_VAL(ZONE); }
	YY_BREAK
case 122:
YY_RULE_SETUP
#line 491 "OW_WQLLexer.ll"
{
					long val;
					char* endptr;

					errno = 0;
					val = strtol(static_cast<char *>(owwqltext), &endptr, 10);
					if (*endptr != '\0' || errno == ERANGE)
					{
						/* integer too large, treat it as a float */
						RETURN_STR(FCONST);
					}
					RETURN_STR(ICONST);
				}
	YY_BREAK
case 123:
YY_RULE_SETUP
#line 505 "OW_WQLLexer.ll"
{
					RETURN_STR(FCONST);
				}
	YY_BREAK
case 124:
YY_RULE_SETUP
#line 509 "OW_WQLLexer.ll"
{
					RETURN_STR(FCONST);
				}
	YY_BREAK
case 125:
YY_RULE_SETUP
#line 513 "OW_WQLLexer.ll"
{
					RETURN_STR(IDENT);
				}
	YY_BREAK
case 126:
YY_RULE_SETUP
#line 517 "OW_WQLLexer.ll"
{ return owwqltext[0]; }
	YY_BREAK
case 127:
YY_RULE_SETUP
#line 519 "OW_WQLLexer.ll"
ECHO;
	YY_BREAK
#line 6637 "OW_WQLLexer.cc"
case YY_STATE_EOF(INITIAL):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed owwqlin at a new source and called
			 * owwqllex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = owwqlin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = (yy_c_buf_p);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( owwqlwrap( ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * owwqltext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
} /* end of owwqllex */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
static int yy_get_next_buffer (void)
{
    	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	register char *source = (yytext_ptr);
	register int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			size_t num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					owwqlrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			owwqlrestart(owwqlin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    static yy_state_type yy_get_previous_state (void)
{
	register yy_state_type yy_current_state;
	register char *yy_cp;
    
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
		yy_current_state = yy_nxt[yy_current_state][(*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1)];
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
{
	register int yy_is_jam;
    	register char *yy_cp = (yy_c_buf_p);

	yy_current_state = yy_nxt[yy_current_state][1];
	yy_is_jam = (yy_current_state <= 0);

	if ( ! yy_is_jam )
		{
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		}

	return yy_is_jam ? 0 : yy_current_state;
}

    static void yyunput (int c, register char * yy_bp )
{
	register char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up owwqltext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = (yy_n_chars) + 2;
		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		register char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}

#ifndef YY_NO_INPUT
#ifdef __cplusplus
    static int yyinput (void)
#else
    static int input  (void)
#endif

{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (yy_c_buf_p) - (yytext_ptr);
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					owwqlrestart(owwqlin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( owwqlwrap( ) )
						return EOF;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve owwqltext */
	(yy_hold_char) = *++(yy_c_buf_p);

	return c;
}
#endif	/* ifndef YY_NO_INPUT */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void owwqlrestart  (FILE * input_file )
{
    
	if ( ! YY_CURRENT_BUFFER ){
        owwqlensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            owwql_create_buffer(owwqlin,YY_BUF_SIZE );
	}

	owwql_init_buffer(YY_CURRENT_BUFFER,input_file );
	owwql_load_buffer_state( );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
    void owwql_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		owwqlpop_buffer_state();
	 *		owwqlpush_buffer_state(new_buffer);
     */
	owwqlensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	owwql_load_buffer_state( );

	/* We don't actually know whether we did this switch during
	 * EOF (owwqlwrap()) processing, but the only time this flag
	 * is looked at is after owwqlwrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

static void owwql_load_buffer_state  (void)
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	owwqlin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE owwql_create_buffer  (FILE * file, int  size )
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) owwqlalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in owwql_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) owwqlalloc(b->yy_buf_size + 2  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in owwql_create_buffer()" );

	b->yy_is_our_buffer = 1;

	owwql_init_buffer(b,file );

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with owwql_create_buffer()
 * 
 */
    void owwql_delete_buffer (YY_BUFFER_STATE  b )
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		owwqlfree((void *) b->yy_ch_buf  );

	owwqlfree((void *) b  );
}

#ifndef __cplusplus
extern int isatty (int );
#endif /* __cplusplus */
    
/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a owwqlrestart() or at EOF.
 */
    static void owwql_init_buffer  (YY_BUFFER_STATE  b, FILE * file )

{
	int oerrno = errno;
    
	owwql_flush_buffer(b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then owwql_init_buffer was _probably_
     * called from owwqlrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

        b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
    
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
    void owwql_flush_buffer (YY_BUFFER_STATE  b )
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		owwql_load_buffer_state( );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
void owwqlpush_buffer_state (YY_BUFFER_STATE new_buffer )
{
    	if (new_buffer == NULL)
		return;

	owwqlensure_buffer_stack();

	/* This block is copied from owwql_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from owwql_switch_to_buffer. */
	owwql_load_buffer_state( );
	(yy_did_buffer_switch_on_eof) = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
void owwqlpop_buffer_state (void)
{
    	if (!YY_CURRENT_BUFFER)
		return;

	owwql_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		owwql_load_buffer_state( );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
static void owwqlensure_buffer_stack (void)
{
	int num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
		num_to_alloc = 1;
		(yy_buffer_stack) = (struct yy_buffer_state**)owwqlalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		
		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
				
		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		int grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)owwqlrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}

/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 * 
 * @return the newly allocated buffer state object. 
 */
YY_BUFFER_STATE owwql_scan_buffer  (char * base, yy_size_t  size )
{
	YY_BUFFER_STATE b;
    
	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) owwqlalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in owwql_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	owwql_switch_to_buffer(b  );

	return b;
}

/** Setup the input buffer state to scan a string. The next call to owwqllex() will
 * scan from a @e copy of @a str.
 * @param str a NUL-terminated string to scan
 * 
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       owwql_scan_bytes() instead.
 */
YY_BUFFER_STATE owwql_scan_string (yyconst char * str )
{
    
	return owwql_scan_bytes(str,strlen(str) );
}

/** Setup the input buffer state to scan the given bytes. The next call to owwqllex() will
 * scan from a @e copy of @a bytes.
 * @param bytes the byte buffer to scan
 * @param len the number of bytes in the buffer pointed to by @a bytes.
 * 
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE owwql_scan_bytes  (yyconst char * bytes, int  len )
{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;
    
	/* Get memory for full buffer, including space for trailing EOB's. */
	n = len + 2;
	buf = (char *) owwqlalloc(n  );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in owwql_scan_bytes()" );

	for ( i = 0; i < len; ++i )
		buf[i] = bytes[i];

	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;

	b = owwql_scan_buffer(buf,n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in owwql_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

static void yy_fatal_error (yyconst char* msg )
{
    	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up owwqltext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		owwqltext[owwqlleng] = (yy_hold_char); \
		(yy_c_buf_p) = owwqltext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		owwqlleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/** Get the input stream.
 * 
 */
FILE *owwqlget_in  (void)
{
        return owwqlin;
}

/** Get the output stream.
 * 
 */
FILE *owwqlget_out  (void)
{
        return owwqlout;
}

/** Get the length of the current token.
 * 
 */
int owwqlget_leng  (void)
{
        return owwqlleng;
}

/** Get the current token.
 * 
 */

char *owwqlget_text  (void)
{
        return owwqltext;
}

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param in_str A readable stream.
 * 
 * @see owwql_switch_to_buffer
 */
void owwqlset_in (FILE *  in_str )
{
        owwqlin = in_str ;
}

void owwqlset_out (FILE *  out_str )
{
        owwqlout = out_str ;
}

int owwqlget_debug  (void)
{
        return owwql_flex_debug;
}

void owwqlset_debug (int  bdebug )
{
        owwql_flex_debug = bdebug ;
}

/* owwqllex_destroy is for both reentrant and non-reentrant scanners. */
int owwqllex_destroy  (void)
{
    
    /* Pop the buffer stack, destroying each element. */
	while(YY_CURRENT_BUFFER){
		owwql_delete_buffer(YY_CURRENT_BUFFER  );
		YY_CURRENT_BUFFER_LVALUE = NULL;
		owwqlpop_buffer_state();
	}

	/* Destroy the stack itself. */
	owwqlfree((yy_buffer_stack) );
	(yy_buffer_stack) = NULL;

    return 0;
}

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
{
	register int i;
    	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * s )
{
	register int n;
    	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *owwqlalloc (yy_size_t  size )
{
	return (void *) malloc( size );
}

void *owwqlrealloc  (void * ptr, yy_size_t  size )
{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
}

void owwqlfree (void * ptr )
{
	free( (char *) ptr );	/* see owwqlrealloc() for (char *) cast */
}

#define YYTABLES_NAME "yytables"

#line 519 "OW_WQLLexer.ll"



void
owwqlerror(const char *message)
{
	printf( "parser: %s at or near \"%s\"", message, owwqltext);
}

/*
 scanner_init:
	called by postgres before any actual parsing is done
*/
void
WQLscanner_init()
{
	/* it's important to set this to NULL
	   because input()/myinput() checks the non-nullness of parseCh
	   to know when to pass the string to lex/flex */
	parseCh = NULL;

	strbuffer.reset();
	
#if defined(FLEX_SCANNER)
	if (YY_CURRENT_BUFFER)
		owwql_flush_buffer(YY_CURRENT_BUFFER);
#endif /* FLEX_SCANNER */
	BEGIN INITIAL;
}
#if !defined(FLEX_SCANNER)

/* get lex input from a string instead of from stdin */
int
input()
{
	if (parseCh == NULL)
		parseCh = WQLParser::parserInput;
	if (*parseCh == '\0')
		return(0);
	else
		return(*parseCh++);
}

/* undo lex input from a string instead of from stdin */
void
unput(char c)
{
	if (parseCh == NULL)
		elog(FATAL, "Unput() failed.\n");
	else if (c != 0)
		*--parseCh = c;
}

#endif /* !defined(FLEX_SCANNER) */

#ifdef FLEX_SCANNER

/* input routine for flex to read input from a string instead of a file */
static int
myinput(char* buf, int max)
{
	int len;

	if (parseCh == NULL)
		parseCh = WQLImpl::getParserInput();
	len = strlen(parseCh);		/* remaining data available */
	/* Note: this code used to think that flex wants a null-terminated
	 * string.  It does NOT, and returning 1 less character than it asks
	 * for will cause failure under the right boundary conditions.  So
	 * shut up and fill the buffer to the limit, you hear?
	 */
	if (len > max)
		len = max;
	if (len > 0)
		memcpy(buf, parseCh, len);
	parseCh += len;
	return len;

}


#endif /* FLEX_SCANNER */

